(this["webpackJsonpconquest-of-hell-idle"]=this["webpackJsonpconquest-of-hell-idle"]||[]).push([[0],{123:function(e){e.exports=JSON.parse('{"0.1.0":{"changes":["Initial version"]},"0.1.1":{"changes":["Increased default hit chance from 50% to 90%.","Increased latent power base gain formula from 5 * (level - 1) ^ 2 to 10 * (level - 1) ^ 2.","Changed base hp formula to 50 + (25 * level).","Changed base damage formula to 10 * level.","Accuracy now increases chance of getting a more damaging type of hit and Evasion reduces it.","Player can choose bonus traits as a reincarnation bonus instead of automatically getting all previous traits.","Added a summary section above the action log to easily keep track of player and enemy HP.","Encounter generation logic chooses fights against approximately equal level enemies more often."]},"0.1.2":{"changes":["The player starts with bonus points instead of earning them on the first reincarnation.","Fixed the bonus point calculation and starting traits on the reincarnation page.","Added a new demon: Tormented Dead which inflicts the pain it suffers back on their enemies."]},"0.2.0":{"changes":["Reimplemented many traits.","Added tactics, which allows demons to emphasize certain attributes and customize their fighting style.","Reduced timer duration for almost all actions","Combat actions which occur on the same round now print at the same time","Added several additional tooltips.","Traits are now leveled from 1 to 10 instead of 1 to 100, with the level increasing every 10 levels."]},"0.2.1":{"changes":["Fixed a typo, from \'You weak spiritual energy[...]\' to \'Your weak spiritual energy[...]\'","Changed how attack damage is calculated which was increasing damage based on Power too much","The enemy is cleared when exploring after combat, instead of when the combat ends.","Fixed a bug with starting traits not clearing properly when changed."],"compatiblePreviousVersions":["0.2.0"]},"0.3.0":{"changes":["Set level cap temporarily to 25.","Don\'t show the latent power gain on initial demon selection reincarnation","Added a fatigue mechanic which causes damage in long combats, for when two high defense opponents encounter each other.","Enemies gain higher base attributes and lower latent power","Added an automatic reincarnation mechanic, which will automatically restart","Player receives a small health boost, to give them a small edge against level 1 and 2 enemies.","When gaining a level from a kill, the player heals to full","Damage multipliers from power is capped at x100 and from resilience is capped at x0.01","Increased probabilities of greater and lesser level encounters.","Latent power is now capped based on the highest level enemy defeated","Base chance to escape/intimidate is now equal to 25% per level different between the player and the other demon.","The player bonus to chances to intimidate lesser demons is now equal to the player\'s deceit, minus the other demon\'s cunning, times 5 (minimum 0); this is in addition to the modifier based on the level difference","The player bonus to chances to escape from greater demons is now equal to the player\'s cunning, minus the other demon\'s deceit, times 5 (minimum 0); this is in addition to the level based modifier.","When the player encounters a demon that is significantly weaker than the strongest demon the player has defeated, the enemy demon is instantly killed as they are simply willed out of existence.","When the player is killed by a demon whose level is higher than that of the strongest demon the player has killed, the player will only encounter that demon at that level until the player defeats them, allowing the player to tailor their abilities to defeat that specific enemy.","Player attributes now default to 1 instead of 0","The bonus point cost to increase base attributes now goes up at the total points spent on attributes gets higher.","Critical/Glancing Hits are now +/-20% damage instead of 50%.","The Terrified status now inflicts Precision and Power penalties instead of stunning, which was much stronger than the other options","The Shared Pain trait now reflects 20% damage per level instead of 5%.","The player cannot encounter Greater demons when they\'re level is below 5."]}}')},183:function(e,t,n){},300:function(e,t,n){},305:function(e,t){},307:function(e,t){},318:function(e,t){},320:function(e,t){},347:function(e,t){},349:function(e,t){},350:function(e,t){},355:function(e,t){},357:function(e,t){},376:function(e,t){},388:function(e,t){},391:function(e,t){},404:function(e,t){},70:function(e){e.exports=JSON.parse('{"name":"conquest-of-hell-idle","version":"0.3.0","private":true,"homepage":"/hell-conquest-idle/","dependencies":{"@material-ui/core":"^4.11.1","@material-ui/icons":"^4.9.1","@testing-library/jest-dom":"^5.11.4","@testing-library/react":"^11.1.0","@testing-library/user-event":"^12.1.10","cypress":"^6.1.0","decimal.js":"^10.2.1","md5":"^2.3.0","node-uuid":"^1.4.8","react":"^17.0.1","react-circular-progressbar":"^2.0.3","react-dom":"^17.0.1","react-hotkeys-hook":"^2.4.0","react-redux":"^7.2.2","react-router-dom":"^5.2.0","react-scripts":"4.0.1","react-three-fiber":"^5.3.3","redux":"^4.0.5","seedrandom":"^3.0.5","three":"^0.122.0","tween.js":"^16.6.0","web-vitals":"^0.2.4"},"scripts":{"start":"react-scripts start","build":"react-scripts build","test":"react-scripts test","eject":"react-scripts eject"},"eslintConfig":{"extends":["react-app","react-app/jest"]},"browserslist":{"production":[">0.2%","not dead","not op_mini all"],"development":["last 1 chrome version","last 1 firefox version","last 1 safari version"]}}')},708:function(e,t,n){"use strict";n.r(t);var a=n(1),i=n(0),c=n.n(i),r=n(12),s=n.n(r),o=(n(300),n(17)),l=(n(183),n(15)),u=n(5),m=(n(394),n(18)),d=n(59),h=n(60),b={bloodthirstyKnight:{name:"Bloodthirsty Knight",traits:["bloodrage"],enabled:!0,appearance:"bloodthirstyKnight",texture:"01_warrior.png",description:"A ruthless warrior who delighted in slaughtering whoever they encounter on the battlefield."},rapaciousHighwayman:{name:"Rapacious Highwayman",traits:["cupidity"],enabled:!1,appearance:"rapaciousHighwayman",texture:"02_hunter.png",description:"A thief who stole from whomever he could get away with, from wealthy merchants to starving vagrants."},condemnedSlasher:{name:"Condemned Slasher",traits:["sadisticJoy"],enabled:!0,appearance:"condemnedSlasher",texture:"03_rogue.png",description:"A madman who gained exquisite pleasure from seeing how many cuts could be made in a victim's body before they died."},crushingSnake:{name:"Crushing Snake",traits:["inescapableGrasp"],enabled:!0,appearance:"crushingSnake",texture:"06_snake_01.png",description:"A monstrous reptile which"},skitteringHorror:{name:"Skittering Horror",traits:["terrifyingSkitter"],enabled:!0,appearance:"skitteringHorror",texture:"10_spider.png",description:"A massive spider that enjoys stalking its prey, frightening it by the sickening skittering of it's arachnid legs."},deadlyHornet:{name:"Deadly Hornet",traits:["piercingStrike"],enabled:!0,appearance:"deadlyHornet",texture:"12_wasp.png",description:"An insect whose stinger is able to pierce even metal protection."},tormentedDead:{name:"Tormented Dead",traits:["sharedPain"],enabled:!0,appearance:"tormentedDead",texture:"29_zombie.png",description:"A human denied eternal rest and in agony from its ruined flesh."},wheezingApparition:{name:"Wheezing Apparition",traits:["exhaustingTouch"],enabled:!1,appearance:"wheezingApparition",texture:"128_sorrowsworn.png",description:"A soul of someone killed by strangulation, searching endlessly for victims upon which it can inflict the same fate."},monstrousTroll:{name:"Monstrous Troll",traits:["regeneration"],enabled:!1,appearance:"monstrousTroll",texture:"27_troll.png",description:"A hulking"}};function g(e){if(!b[e])throw new Error("No creature with id ".concat(e," is defined"))}console.log(Object({NODE_ENV:"production",PUBLIC_URL:"/hell-conquest-idle",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}).REACT_APP_DEBUG_MODE,typeof Object({NODE_ENV:"production",PUBLIC_URL:"/hell-conquest-idle",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}).REACT_APP_DEBUG_MODE);var p={manualSpeedup:{enabled:!1,multiplier:2},actionLog:{maxSize:Object({NODE_ENV:"production",PUBLIC_URL:"/hell-conquest-idle",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}).REACT_APP_MAX_ACTIONLOG_SIZE||20},encounters:{lesserEncounterChanceWeight:20,greaterEncounterChanceWeight:20,evenEncounterChanceWeight:60,lesserLevelScale:1,lesserLevelFloor:5,greaterLevelScale:1,greaterLevelCap:4,chanceToIntimidateLesser:"player.powerLevel.minus(enemy.powerLevel).times(25).plus(Decimal.max(Decimal(player.attributes.deceit).minus((enemy && enemy.attributes.cunning)), 0).times(5))",chanceToEscapeGreater:"player.powerLevel.gt(enemy.powerLevel) ? 100 : Decimal.max(enemy.powerLevel.minus(player.powerLevel), 1).times(25).plus(Decimal.max(Decimal(player.attributes.cunning).minus((enemy && enemy.attributes.deceit) || 0), 0).times(5))",lesserDemonInstantKillLevel:"Decimal(highestLevelEnemyDefeated).minus(5)",enemyLatentPower:"Decimal.max(0, encounterLevel.minus(2).times(25))",minimumLevelForGreaterEncounters:5},mechanics:{artifacts:{enabled:Object({NODE_ENV:"production",PUBLIC_URL:"/hell-conquest-idle",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}).REACT_APP_FEATURE_ARTIFACTS_ENABLED||!1},reincarnation:{bonusPointsForHighestLevel:2,latentPowerGainOnReincarnate:"player.powerLevel.times(5)",latentPowerEffectScale:.01,traitPointCost:"Decimal.max(1, traitsOwned.times(2))",latentPowerCap:"highestLevelEnemyDefeated.times(25)",attributePointCost:"Decimal.max(1, attributeScore)"},xp:{gainedFromGreaterDemon:"enemy.powerLevel",gainedFromLesserDemon:"enemy.powerLevel",gainedFromOtherDemon:"enemy.powerLevel.times(5)"},levelToPowerEquation:"$level.eq(1) ? Decimal(0) : Decimal($level.minus(1).toNumber()).pow(2).times(10)",powerToLevelEquation:"Decimal(0).eq($powerPoints) ? Decimal(1) : Decimal.sqrt($powerPoints.div(10)).plus(1).floor()",maxLevel:25,combat:{randomEncounterChance:"player.powerLevel.div(10).floor().times(10)",determineHit:"roll >= target ? 'hit' : 'miss'",precision:{baseAttribute:"deceit",effectPerPoint:.1},resilience:{baseAttribute:"brutality",effectPerPoint:.1},evasion:{baseAttribute:"cunning",effectPerPoint:.1},power:{baseAttribute:"brutality",effectPerPoint:.1},traitRank:{baseAttribute:"madness",effectPerPoint:.05},playerAttributeMinimum:1,fatigue:{evasionPenaltyPerPoint:2},hp:{pcBonus:10,pointsPerLevel:25,healingPerLevel:5,baseAttribute:"madness",effectPerPoint:.05},baseHitChance:90,baseDamage:"player.powerLevel.times(10)",attributeDamageModifier:.02,defaultMinDamageMultiplier:.8,defaultMedDamageMultiplier:1,defaultMaxDamageMultiplier:1.2,baseMinimumDamageWeight:5,baseMedianDamageWeight:90,baseMaximumDamageWeight:5}},debug:"true"===Object({NODE_ENV:"production",PUBLIC_URL:"/hell-conquest-idle",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}).REACT_APP_DEBUG_MODE};function f(){p.debug&&console.debug.apply(null,arguments)}var j=n(3),x={aggressive:{title:"Aggressive",description:"Your tactics emphasize overwhelming power and violence.",modifiers:{power_modifier:.5,precision_modifier:.25}},defensive:{title:"Defensive",description:"Your tactics emphasize caution and husbanding your strength.",modifiers:{resilience_modifier:.5,fatigue_multiplier:.75}},deceptive:{title:"Deceptive",description:"Your tactics emphasize disorientation and trickery.",modifiers:{evasion_modifier:.5,max_hit_damage_modifier:.3}}},v={berserk:{name:"Berserk",icon:"./icons/icons-516.png",description:u.template("Your rage grants you a ${power_modifier}% bonus to Power but a ${evasion_modifier}% penalty to Evasion."),effects:{power_modifier:.2,evasion_modifier:-.1}},terrified:{name:"Terrified",icon:"icons/icons-130.png",description:u.template("The fear in your heart inflicts a ${precision_modifier}% penalty to Precision and a ${power_modifier}% penalty to Power."),effects:{precision_modifier:-.2,power_modifier:-.2},decays:!0},restrained:{name:"Restrained",description:u.template("Your limbs are bound, causing a ${accuracy_modifier}% miss chance."),icon:"icons/icons-116.png",effects:{accuracy_modifier:-.1},decays:!0},famished:{name:"Famished",icon:"icons/icons-149.png",effects:{maximum_hp_multiplier:-.01}}},O={bloodrage:{name:"Blood Rage",icon:"icons/icons-139.png",description:u.template("This demon's unquenchable thirst for blood causes it to gain ${rank} stacks of Berserk when an enemy has 50% or less health."),on_round_end:{conditions:{health_percentage:{target:"any_enemy",below:50}},effects:{add_statuses:{berserk:{target:"attacker",rank:"rank"}}}}},cupidity:{name:"Cupidity",icon:"icons/icons-2503.png",description:u.template("When this demon successfully Intimidates another demon, it gains a <span style='color: red'>${rank}%</span> chance to seize the intimidated demon's Artifacts as though it were killed."),on_intimidate:{conditions:{chance:"$rank"},effects:{steal_item_chance:{target:"enemies"}}}},exhaustingTouch:{name:"Strangulation",icon:"icons/icons-115.png",description:u.template("The demon's touch saps the strength from the victims limbs, reducing both Damage and Defense by <span>${rank.times(5)}%</span> for 1 round.")},inescapableGrasp:{name:"Inescapable Grasp",icon:"icons/icons-2221.png",description:u.template("You bind your victims when you strike, causing ${rank} levels of Restrained when you hit with an attack."),on_hitting:{conditions:{critical_hit:{chance:100}},effects:{add_statuses:{restrained:{target:"attacked",rank:"rank"}}},duration:{rounds:2}}},sadisticJoy:{name:"Sadistic Joy",icon:"icons/icons-852.png",description:u.template("The demon gains vile pleasure from the pain it inflicts, absorbing an additional ${rank.times(25)}% power from killing other demons."),on_kill:{effects:{power_gain_modifier:"rank.times(.25)"}}},piercingStrike:{name:"Piercing Strike",icon:"icons/icons-113.png",description:u.template("Your fierce attacks can punch right through even armor. Your <span style='color: lightgreen'>Precision</span> is increased by <span style='color: orangered'>${rank.times(25)}%</span>"),continuous:{effects:{precision_modifier:{target:"self",modifier:"rank.times(.1)"}}}},sharedPain:{name:"Shared Pain",icon:"icons/icons-146.png",description:u.template("You return the pain of injuries inflicted on you, reflecting <span style='color: orangered'>${rank.times(20).toFixed()}%</span> of the damage back."),on_taking_damage:{effects:{target:"attacker",damage:"$rank.times(20).div(100).times(attackDamage)"}}},terrifyingSkitter:{name:"Terrifying Skitter",icon:"icons/icons-2260.png",description:u.template("The sickening sound of your feet on the ground unnerves even other demons, making the enemy <span style='color: violet'>Terrified</span> for <span style='color: lightblue'>${rank.div(10).round(0, 0).plus(1).toFixed()}</span> round(s), reducing their Power and Precision."),on_combat_start:{effects:{add_statuses:{terrified:{target:"all_enemies",rank:"rank"}}},duration:{rounds:"$rank.div(10).round(0, 0).plus(1)"}}},regeneration:{name:"Regeneration",icon:"icons/icons-109.png",description:u.template("Your healing abilities restores you to full hp ${rank}% times per combat, but when you heal gain 1 stack of Famished."),on_round_end:{conditions:{health_percentage:{target:"self",below:100}},effects:{heal:{target:"self",percent:100}}},on_trait:{conditions:{trait:"regeneration"},effects:{add_statuses:{famished:{target:"actor",rank:1}}}}}};var y=function(){function e(t){Object(d.a)(this,e),this._isPc=t.isPc||t._isPc,this.id=t.id,this._name=t.name||t._name,this._absorbedPower=Object(j.Decimal)(t.absorbedPower||t._absorbedPower||0),this._latentPower=Object(j.Decimal)(t.latentPower||t._latentPower||0),this._attributes=new w(t.attributes||t._attributes,this),this._currentHp=Object(j.Decimal)(t._currentHp||this.maximumHp),this._combat=new k(t.combat||t._combat,this),this._traits=Object.keys(t.traits||t._traits).reduce((function(e,n){return e[n]=Object(j.Decimal)((t.traits||t._traits)[n]),e}),{}),this._appearance=t.appearance||t._appearance,this._modifiers=t.modifiers||t._modifiers||[],this._tactics=t.tactics||t._tactics||"defensive",this._statuses=t.statuses||t._statuses||{}}return Object(h.a)(e,[{key:"clearStatuses",value:function(){var e=this;Object.keys(this._statuses).forEach((function(t){return delete e._statuses[t]}))}},{key:"reincarnate",value:function(e,t){this._appearance=e,this._traits=t}},{key:"otherDemonIsGreaterDemon",value:function(e){var t=I(p.encounters.greaterLevelScale,{player:this,enemy:e});return e.powerLevel.gte(this.powerLevel.plus(t))}},{key:"otherDemonIsLesserDemon",value:function(e){var t=I(p.encounters.lesserLevelScale,{player:this,enemy:e});return e.powerLevel.lte(this.powerLevel.minus(t))}},{key:"gainPower",value:function(e){var t=this.latentPower.times(p.mechanics.reincarnation.latentPowerEffectScale).plus(1);return e=e.times(t).floor(),this.absorbedPower=this.absorbedPower.plus(e),e}},{key:"addModifier",value:function(e){this._modifiers.push(e)}},{key:"tactics",get:function(){return this._tactics},set:function(e){this._tactics=e}},{key:"statuses",get:function(){return this._statuses}},{key:"isPc",get:function(){return this._isPc}},{key:"name",get:function(){return this._name}},{key:"powerLevel",get:function(){return W(this._absorbedPower)}},{key:"currentHp",get:function(){return Object(j.Decimal)(this._currentHp)},set:function(e){this.maximumHp.lt(e)?this._currentHp=this.maximumHp:this._currentHp=e}},{key:"isAlive",get:function(){return Object(j.Decimal)(this.currentHp).gt(0)}},{key:"latentPower",get:function(){return this._latentPower},set:function(e){this._latentPower=e}},{key:"maximumHp",get:function(){var e=this.attributes.madness.times(p.mechanics.combat.hp.effectPerPoint);return this.powerLevel.times(e.plus(1)).mul(p.mechanics.combat.hp.pointsPerLevel).plus(this._isPc?p.mechanics.combat.hp.pcBonus:0).floor()}},{key:"attributes",get:function(){return this._attributes}},{key:"combat",get:function(){return this._combat}},{key:"traits",get:function(){return this._traits},set:function(e){this._traits=e}},{key:"appearance",get:function(){return this._appearance}},{key:"healing",get:function(){var e=Object(j.Decimal)(this.powerLevel.times(p.mechanics.combat.hp.healingPerLevel)),t=Object(j.Decimal)(1).plus(x[this.tactics].modifiers.healing_modifier||0);return e.times(t)}},{key:"absorbedPower",get:function(){return this._absorbedPower},set:function(e){var t=this;this._absorbedPower=e,W(this._absorbedPower).gt(p.mechanics.maxLevel)&&(this._absorbedPower=N(p.mechanics.maxLevel)),this.appearance&&this._isPc&&b[this.appearance].traits.forEach((function(e){t._traits[e]=W(t._absorbedPower).plus(1).div(10).ceil(),T().unlockedTraits[e]=t._traits[e]}))}},{key:"speed",get:function(){return Object(j.Decimal)(100)}},{key:"modifiers",get:function(){return this._modifiers}}]),e}(),w=function(){function e(t,n){Object(d.a)(this,e),this._brutality=t.brutality||t._brutality||0,this._cunning=t.cunning||t._cunning||0,this._deceit=t.deceit||t._deceit||0,this._madness=t.madness||t._madness||0,Object.defineProperty(this,"character",{value:function(){return n}})}return Object(h.a)(e,[{key:"baseBrutality",get:function(){return Object(j.Decimal)(this._brutality).floor()}},{key:"baseCunning",get:function(){return Object(j.Decimal)(this._cunning).floor()}},{key:"baseDeceit",get:function(){return Object(j.Decimal)(this._deceit).floor()}},{key:"baseMadness",get:function(){return Object(j.Decimal)(this._madness).floor()}},{key:"brutality",get:function(){var e=this.character().latentPower.times(p.mechanics.reincarnation.latentPowerEffectScale).plus(1);return Object(j.Decimal)(this._brutality).times(e).floor()}},{key:"cunning",get:function(){var e=this.character().latentPower.times(p.mechanics.reincarnation.latentPowerEffectScale).plus(1);return Object(j.Decimal)(this._cunning).times(e).floor()}},{key:"deceit",get:function(){var e=this.character().latentPower.times(p.mechanics.reincarnation.latentPowerEffectScale).plus(1);return Object(j.Decimal)(this._deceit).times(e).floor()}},{key:"madness",get:function(){var e=this.character().latentPower.times(p.mechanics.reincarnation.latentPowerEffectScale).plus(1);return Object(j.Decimal)(this._madness).times(e).floor()}}]),e}(),k=function(){function e(t,n){Object(d.a)(this,e),this.character=function(){return n}}return Object(h.a)(e,[{key:"minimumDamage",get:function(){return D("min",this.character()).floor()}},{key:"medianDamage",get:function(){return D("med",this.character()).floor()}},{key:"maximumDamage",get:function(){return D("max",this.character()).floor()}},{key:"evasion",get:function(){return _(this.character(),"evasion")}},{key:"precision",get:function(){return _(this.character(),"precision")}},{key:"resilience",get:function(){return _(this.character(),"resilience")}},{key:"power",get:function(){return _(this.character(),"power")}}]),e}();function D(e,t){var n=I(p.mechanics.combat.baseDamage,{player:t}),a=p.mechanics.combat["default".concat(e.substring(0,1).toUpperCase()).concat(e.substring(1),"DamageMultiplier")],i=x[t.tactics].modifiers["".concat(e,"_hit_damage_modifier")]||0,c=Object(j.Decimal)(a).plus(i);return n.times(c).ceil()}function _(e,t){var n=e.attributes[p.mechanics.combat[t].baseAttribute],a=Object(j.Decimal)(0).plus(x[e.tactics].modifiers["".concat(t,"_modifier")]||0),i=Object.keys(e.statuses).reduce((function(e,n){var a=v[n];return e.plus(a.effects["".concat(t,"_modifier")]||0)}),Object(j.Decimal)(0)),c=Object.keys(e.traits).reduce((function(n,a){var i=O[a];return"self"===u.get(i,["continuous","effects","".concat(t,"_modifier"),"target"])?n.plus(I(u.get(i,["continuous","effects","".concat(t,"_modifier"),"modifier"]),{rank:Object(j.Decimal)(e.traits[a])})):n}),Object(j.Decimal)(0));return n.times(a.plus(i).plus(c).plus(1))}var P=n(70),S=n(123),L=n(112)("hell-conquest-".concat(P.version)),E={},A=M();function T(){return A}function C(){window.localStorage.setItem(L,JSON.stringify(A))}function M(){var e=window.localStorage.getItem(L);if(!e){var t=S[P.version].compatiblePreviousVersions;t&&(e=t.reduce((function(e,t){var a=n(112)("hell-conquest-".concat(t));return window.localStorage.getItem(a)||e}),null))}return e?JSON.parse(e,Y):{debug:{creatures:{},regions:{}},rival:{},reincarnationCount:0,latentPowerCap:0,passivePowerIncome:Object(j.Decimal)(0),unlockedMonsters:{},unlockedTraits:{},paused:!0,currentAction:null,nextAction:null,id:0,highestLevelReached:Object(j.Decimal)(1),highestLevelEnemyDefeated:0,startingTraits:{},currentEncounter:null,manualSpeedMultiplier:p.manualSpeedup.enabled?p.manualSpeedup.multiplier:1,currentRegion:"forest",actionLog:[],exploration:{explorationTime:2500,approachTime:5e3,combatTime:5e3,lootingTime:5e3,recoveryTime:2e3,fleeingTime:5e3,intimidateTime:2500,reincarnationTime:3e4},characters:{0:new y({id:0,isPc:!0,name:"You",powerLevel:Object(j.Decimal)(1),absorbedPower:Object(j.Decimal)(0),appearance:"",statuses:{},traits:{},tactics:"defensive",items:[],attributes:{brutality:Object(j.Decimal)(p.mechanics.combat.playerAttributeMinimum),cunning:Object(j.Decimal)(p.mechanics.combat.playerAttributeMinimum),deceit:Object(j.Decimal)(p.mechanics.combat.playerAttributeMinimum),madness:Object(j.Decimal)(p.mechanics.combat.playerAttributeMinimum)},combat:{fatigue:0,minimumDamageMultiplier:.5,medianDamageMultiplier:1,maximumDamageMultiplier:1.5}})},tutorials:{}}}function H(e){return function(e){if(!A.characters[e])throw new Error("No creature exists for '".concat(e,"'"))}(e),A.characters[e]}var F=1;function R(e){return g(e),"monsters/".concat(b[e].texture)}function I(e,t){return null===e||void 0===e?e:(E[e]||(E[e]=new Function("context","with(context) {return ".concat(e,"}"))),t.Decimal=j.Decimal,t.config=p,E[e].call(null,t))}function N(e){return I(p.mechanics.levelToPowerEquation,{$level:Object(j.Decimal)(e)})}function W(e){return I(p.mechanics.powerToLevelEquation,{$powerPoints:Object(j.Decimal)(e)})}function q(e,t){var n=H(0),a=b[n.appearance];if(a&&a.traits.forEach((function(e){A.unlockedTraits[e]&&!n.powerLevel.gt(A.unlockedTraits[e])||(A.unlockedTraits[e]=n.powerLevel)})),Object(j.Decimal)(A.highestLevelReached).lt(n.powerLevel)&&(A.highestLevelReached=n.powerLevel),"random"===e){var i=u.difference(Object.keys(b).filter((function(e){return u.get(A,["debug","creatures",e,"enabled"],!0)&&!1!==b[e].enabled})),Object.keys(A.unlockedMonsters).filter((function(e){return A.unlockedMonsters[e]})));e=i[Math.floor(Math.random()*i.length)]}if(Object.keys(n.attributes).forEach((function(e){n.attributes[e]=Object(j.Decimal)(t[e.substring(1)])})),0!==A.reincarnationCount){A.latentPowerCap=I(p.mechanics.reincarnation.latentPowerCap,{highestLevelEnemyDefeated:Object(j.Decimal)(A.highestLevelEnemyDefeated)});var c=I(p.mechanics.reincarnation.latentPowerGainOnReincarnate,{player:n});A.characters[0].latentPower=j.Decimal.min(I(p.mechanics.reincarnation.latentPowerCap,{player:n,highestLevelEnemyDefeated:Object(j.Decimal)(A.highestLevelEnemyDefeated)}),A.characters[0].latentPower.plus(c))}A.characters[0].absorbedPower=Object(j.Decimal)(0),A.characters[0].reincarnate(e,A.startingTraits),A.unlockedMonsters[e]=!0,H(0).traits=Object.keys(A.startingTraits).filter((function(e){return A.startingTraits[e]})).reduce((function(e,t){return e[t]=A.unlockedTraits[t],e}),{}),b[e].traits.forEach((function(e){H(0).traits[e]=1})),A.currentEncounter=null,H(0).currentHp=H(0).maximumHp,T().actionLog=[],T().passivePowerIncome=Object(j.Decimal)(0),A.reincarnationCount++,T().currentAction="exploring",C()}function Y(e,t){switch(e){case"characters":return Object.keys(t).reduce((function(e,n){return e[n]=new y(t[n]),e}),{});case"enemies":return Object.keys(t).map((function(e){return new y(t[e])}));case"paused":case"automaticReincarnate":return!1;case"passivePowerIncome":return Object(j.Decimal)(t);case"value":var n=Number.parseFloat(t);return Number.isNaN(n)?t:Object(j.Decimal)(t);default:return t}}var B=function(){function e(t,n,a,i){Object(d.a)(this,e),this.name=t,this.encounters=a,this.background=i}return Object(h.a)(e,[{key:"startEncounter",value:function(e,t){var n,a=p.encounters.lesserEncounterChanceWeight+p.encounters.greaterEncounterChanceWeight+p.encounters.evenEncounterChanceWeight,i=Math.floor(t.double()*a)+1,c=p.encounters.lesserEncounterChanceWeight,r=p.encounters.lesserEncounterChanceWeight+p.encounters.evenEncounterChanceWeight,s=e.powerLevel;switch(f("Determine encounter. Roll ".concat(i," vs lesser (<=").concat(c,"), even (<=").concat(r,")")),i<=c?(n="lesser",f("Lesser triggered")):i>r&&e.powerLevel.gte(p.encounters.minimumLevelForGreaterEncounters)?(n="greater",f("Greater encounter triggered")):(n="even",f("Even level encounter triggered")),n){case"greater":var o=Math.floor(t.double()*p.encounters.greaterLevelCap)+p.encounters.greaterLevelScale;s=T().rival.level?j.Decimal.min(s.plus(o),Object(j.Decimal)(T().rival.level).minus(1)):s.plus(o);break;case"lesser":var l=Math.floor(t.double()*p.encounters.lesserLevelFloor)+p.encounters.lesserLevelScale;s=j.Decimal.max(1,s.minus(l));break;default:var d=Math.max(p.encounters.greaterLevelScale,p.encounters.lesserLevelScale)-Math.min(p.encounters.greaterLevelScale,p.encounters.lesserLevelScale),h=Math.floor(t.double()*d)-d;s=j.Decimal.max(1,s.plus(h))}var v=T().rival&&Object(j.Decimal)(T().rival.level||0).lte(s);v&&(s=Object(j.Decimal)(T().rival.level||0)),p.debug&&f("Generated encounter level is ".concat(s));var O=v?this.encounters[T().rival.type]:function(e){var t=Object.keys(e.encounters).filter((function(t){f("Determining if '".concat(t,"' is enabled."));var n=!1!==e.encounters[t].enabled;n||f("Encounter '".concat(t,"' disabled"));var a=!1!==u.get(T(),["debug","regions",e.id,"encounters",t]);return a||f("Encounter '".concat(t,"' disabled by debug.")),n&&a})),n=t[Math.floor(Math.random()*Object.keys(t).length)];return f("Selected encounter '".concat(n,"'")),e.encounters[n]}(this);if(void 0===O)throw new Error("No encounter selected");return Object(m.a)(Object(m.a)({encounterLevel:s},O),{},{pendingActions:[],enemies:O.enemies.flatMap((function(e){return u.range(0,e.count).map((function(n){var a=function(e,t,n){if(g(e),p.debug&&f("Generating creature with id ".concat(e," and level ").concat(t)),void 0===t)throw new Error("No powerLevel");if(Number.isNaN(t))throw new Error("Level cannot be NaN");for(var a=Object.keys(x)[Math.floor(3*n.double())],i=F++,c=t.div(20).floor(),r=b[e].traits.reduce((function(e,n){return e[n]=t.div(10).ceil(),e}),{}),s=[e],o=0;o<c;o++){var l=Object.keys(b).filter((function(e){return!s.includes(e)})),u=n.double()*l.length;b[l[u]].traits.forEach((function(e){r[e]=t.div(10).minus(1).ceil()}))}return A.characters[i]=new y(Object(m.a)(Object(m.a)({id:i},b[e]),{},{latentPower:Object(j.Decimal)(I(p.encounters.enemyLatentPower,{encounterLevel:t})),tactics:a,traits:r,absorbedPower:N(t),artifacts:[],statuses:{},attributes:{brutality:t.div(2).floor(),cunning:t.div(2).floor(),deceit:t.div(2).floor(),madness:t.div(2).floor()},combat:{fatigue:0,minimumDamageMultiplier:.5,medianDamageMultiplier:1,maximumDamageMultiplier:1.5}})),C(),A.characters[i]}(e.name,s,t);return a.isRival=v,a.isRival&&(a.traits=T().rival.traits,a.tactics=T().rival.tactics),a}))}))})}}]),e}(),$={forest:new B("The Prey's Lament",!0,{bloodthirstyKnight:{description:"1 Bloodthirsty Knight",type:"combat",enemies:[{name:"bloodthirstyKnight",count:1}]},rapaciousHighwayman:{description:"1 Rapacious Highwayman",type:"combat",enabled:!1,enemies:[{name:"rapaciousHighwayman",count:1}]},condemnedSlasher:{description:"1 Condemned Slasher",type:"combat",enabled:!0,enemies:[{name:"condemnedSlasher",count:1}]},crushingSnake:{description:"1 Crushing Snake",type:"combat",enabled:!0,enemies:[{name:"crushingSnake",count:1}]},skitteringHorror:{description:"1 Skittering Horror",type:"combat",enabled:!0,enemies:[{name:"skitteringHorror",count:1}]},deadlyHornet:{description:"1 Deadly Hornet",type:"combat",enabled:!0,enemies:[{name:"deadlyHornet",count:1}]},tormentedDead:{description:"1 Tormented Dead",type:"combat",enabled:!0,enemies:[{name:"tormentedDead",count:1}]}},{background:"backgrounds/parallax-demon-woods-bg.png",far:"backgrounds/parallax-demon-woods-far-trees.png",mid:"backgrounds/parallax-demon-woods-mid-trees.png",close:"backgrounds/parallax-demon-woods-close-trees.png"}),caves:new B("The Bottomless Caverns",!1,{},{}),mountains:new B("The Crags of Futility",!1,{},{}),desert:new B("The Desert of Isolation",!1,{},{})};var G={exploring:{id:"exploring",duration:"exploration.explorationTime",description:"Exploring..."},approaching:{id:"approaching",duration:"exploration.approachTime",description:"Approaching Enemy..."},dead:{id:"dead",duration:1e8,description:"Rotting, time to reincarnate..."},looting:{id:"looting",duration:"exploration.lootingTime",description:"Looting the body..."},fleeing:{id:"fleeing",duration:"exploration.fleeingTime",description:"Fleeing in terror!"},fighting:{id:"fighting",duration:"exploration.combatTime",description:"In Combat!"},reincarnating:{id:"resurrecting",duration:"exploration.reincarnationTime",description:"Reincarnating..."},recovering:{id:"recovering",duration:"exploration.recoveryTime",description:"Healing..."},intimidating:{id:"intimidating",duration:"exploration.intimidateTime",description:"Intimidating..."}},K=n(280),U=n(744),z=n(38),J=n(736),V=n(743),X=n(285),Z=n.n(X),Q=n(286),ee=n.n(Q),te=n(746),ne={brutality:{label:"Brutality",description:u.template("Brutality is how savage and ruthless a Demon is. It adds to Power and Resilience."),icon:"icons/icons-92.png"},cunning:{label:"Cunning",description:u.template("Cunning is how quick thinking a Demon is. It adds to Evasion."),icon:"icons/icons-24.png"},deceit:{label:"Deceit",description:u.template("Deceit is how underhanded and manipulative a Demon is. It adds to Precision."),icon:"icons/icons-17.png"},madness:{label:"Madness",description:u.template("Madness is how disconnected from the limits of reality the Demon is. It gives a ${rank * ".concat(100*p.mechanics.combat.traitRank.effectPerPoint,"}% bonus to the effects of Traits and health.")),icon:"icons/icons-124.png"}},ae=function(e){return Object(a.jsx)(J.a,{container:!0,children:Object(a.jsxs)("ul",{children:[x[e.tactic].modifiers.power_modifier&&Object(a.jsx)(te.a,{title:"Power makes your hits deal additional damage.",children:Object(a.jsxs)("li",{style:{color:"green",textAlign:"left"},children:["+",100*x[e.tactic].modifiers.power_modifier,"% to Power"]})}),x[e.tactic].modifiers.precision_modifier&&Object(a.jsx)(te.a,{title:"Precision makes your hits more severe.",children:Object(a.jsxs)("li",{style:{color:"green",textAlign:"left"},children:["+",100*x[e.tactic].modifiers.precision_modifier,"% to Precision"]})}),x[e.tactic].modifiers.resilience_modifier&&Object(a.jsx)(te.a,{title:"Resilience makes you more resistant to damage.",children:Object(a.jsxs)("li",{style:{color:"green",textAlign:"left"},children:["+",100*x[e.tactic].modifiers.resilience_modifier,"% to Resilience"]})}),x[e.tactic].modifiers.fatigue_multiplier&&Object(a.jsx)(te.a,{title:"Fatigue causes damage when combats last too long.",children:Object(a.jsxs)("li",{style:{color:"green",textAlign:"left"},children:["-",100*(1-x[e.tactic].modifiers.fatigue_multiplier),"% to Fatigue Damage"]})}),x[e.tactic].modifiers.evasion_modifier&&Object(a.jsx)(te.a,{title:"Evasion makes incoming attacks less severe.",children:Object(a.jsxs)("li",{style:{color:"green",textAlign:"left"},children:["+",100*x[e.tactic].modifiers.evasion_modifier,"% to Evasion"]})}),x[e.tactic].modifiers.max_hit_damage_modifier&&Object(a.jsx)(te.a,{title:"Critical hits deal extra damage",children:Object(a.jsxs)("li",{style:{color:"green",textAlign:"left"},children:["+",100*x[e.tactic].modifiers.max_hit_damage_modifier,"% to Critical hit damage"]})})]})})};function ie(e){var t=Object(U.d)(),n=H(0),c=Object(i.useState)(Object.keys(n.attributes).reduce((function(e,t){var a="base".concat(t.substring(1,2).toUpperCase()).concat(t.substring(2));return e[t.substring(1)]=n.attributes[a],e}),{})),r=Object(o.a)(c,2),s=r[0],l=r[1],d=Object(i.useState)(H(0).tactics),h=Object(o.a)(d,2),g=(h[0],h[1]),f=Object(i.useState)(T().startingTraits),v=Object(o.a)(f,2),y=v[0],w=v[1],k=H(0).latentPower.plus(I(p.mechanics.reincarnation.latentPowerGainOnReincarnate,{player:n})),D=Object(j.Decimal)(T().highestLevelReached).times(p.mechanics.reincarnation.bonusPointsForHighestLevel),_=I(p.mechanics.reincarnation.latentPowerCap,{highestLevelEnemyDefeated:Object(j.Decimal)(T().highestLevelEnemyDefeated||0)}),P=D.minus(Object.values(s).reduce((function(e,t){t=Object(j.Decimal)(t).minus(p.mechanics.combat.playerAttributeMinimum);var n=Object(j.Decimal)(t).times(Object(j.Decimal)(t).plus(1)).div(2);return Object(j.Decimal)(e).plus(n)}),0)).minus(Object.values(y).filter((function(e){return e})).reduce((function(e,t,n){return e.plus(I(p.mechanics.reincarnation.traitPointCost,{traitsOwned:Object(j.Decimal)(n)}))}),Object(j.Decimal)(0))),S=I(p.mechanics.reincarnation.traitPointCost,{traitsOwned:Object(j.Decimal)(Object.values(y).filter((function(e){return e})).length)}),L={brutality:I(p.mechanics.reincarnation.attributePointCost,{attributeScore:s.brutality}),cunning:I(p.mechanics.reincarnation.attributePointCost,{attributeScore:s.cunning}),deceit:I(p.mechanics.reincarnation.attributePointCost,{attributeScore:s.deceit}),madness:I(p.mechanics.reincarnation.attributePointCost,{attributeScore:s.madness})};return Object(i.useEffect)((function(){T().paused=!0}),[]),Object(a.jsxs)(J.a,{container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:12,style:{textAlign:"center"},children:Object(a.jsx)("strong",{children:"Reincarnate"})}),0!==T().reincarnationCount&&Object(a.jsxs)(J.a,{item:!0,xs:12,style:{textAlign:"center"},children:["Select a soul to reincarnate as.",Object(a.jsx)("br",{}),"You will reincarnate with a ",Object(a.jsxs)("strong",{children:[j.Decimal.min(k,_).toFixed(),"%"]})," bonus to Attributes and absorbed power due to your Latent Power acquired from previous reincarnations.",Object(a.jsx)("br",{})]}),Object(a.jsxs)(J.a,{container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:12,style:{textAlign:"center"},children:Object(a.jsxs)("strong",{children:["You have ",P.toFixed()," ",n.powerLevel.gt(1)?"points":"point"," to spend out of a max of ",D.toFixed()," from reaching level ",Object(j.Decimal)(T().highestLevelReached).toFixed()," on bonuses "]})}),Object(a.jsx)(J.a,{item:!0,xs:12,style:{textAlign:"center"},children:Object(a.jsx)("strong",{children:"Attributes"})}),Object.keys(ne).map((function(e){return Object(a.jsx)(J.a,{item:!0,xs:3,children:Object(a.jsx)(te.a,{title:ne[e].description({rank:Object(j.Decimal)(s[e]).toFixed()}),children:Object(a.jsxs)("div",{style:{textAlign:"center"},children:[Object(a.jsx)("img",{src:ne[e].icon}),Object(a.jsxs)("div",{children:[Object(a.jsx)(V.a,{disabled:P.lt(L[e]),onClick:function(){l(Object(m.a)(Object(m.a)({},s),{},Object(z.a)({},e,Object(j.Decimal)(s[e]).plus(1))))},children:Object(a.jsx)(Z.a,{})}),Object(j.Decimal)(s[e]).toFixed(),Object(a.jsx)(V.a,{disabled:Object(j.Decimal)(s[e]).lte(p.mechanics.combat.playerAttributeMinimum),onClick:function(){l(Object(m.a)(Object(m.a)({},s),{},Object(z.a)({},e,Object(j.Decimal)(s[e]).minus(1))))},children:Object(a.jsx)(ee.a,{})})]})]})})})})),Object.keys(T().unlockedTraits).length>0&&Object(a.jsxs)(J.a,{item:!0,xs:12,style:{textAlign:"center"},children:[Object(a.jsx)("strong",{children:"Bonus Starting Traits"})," (Start with traits in addition to that innate to your new demon form. Increase the Tier of your traits by reaching highest levels with the demons that possess them.)"]}),Object.keys(T().unlockedTraits).map((function(e){return Object(a.jsx)(J.a,{item:!0,container:!0,xs:3,justify:"space-around",style:{height:"138px"},children:Object(a.jsx)(J.a,{item:!0,xs:12,style:{textAlign:"center",height:"64%"},children:Object(a.jsx)(V.a,{variant:"contained",color:T().startingTraits[e]?"secondary":"default",disabled:P.lt(S)&&!y[e],onClick:function(){T().startingTraits[e]=!T().startingTraits[e],w(Object(m.a)({},T().startingTraits))},children:Object(a.jsx)(te.a,{title:Object(a.jsx)("div",{dangerouslySetInnerHTML:{__html:"Rank ".concat(Object(j.Decimal)(T().unlockedTraits[e]).toFixed(),": ").concat(O[e].description({rank:Object(j.Decimal)(T().unlockedTraits[e])}))}}),children:Object(a.jsxs)(J.a,{container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:12,children:Object(a.jsx)("img",{src:O[e].icon})}),Object(a.jsxs)(J.a,{item:!0,xs:12,children:[O[e].name," ",Object(j.Decimal)(T().unlockedTraits[e]).toFixed()]}),Object(a.jsx)(J.a,{item:!0,xs:12,children:Object(a.jsxs)("em",{style:{visibility:y[e]?"hidden":"visible"},children:[S.toFixed()," pts"]})})]})})})})})}))]}),Object(a.jsxs)(J.a,{container:!0,item:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:12,style:{textAlign:"center"},children:Object(a.jsx)(te.a,{title:"Tactics provide modifiers based on your fighting style",children:Object(a.jsx)("strong",{children:"Choose Tactics"})})}),Object(a.jsx)(J.a,{container:!0,item:!0,xs:12,justify:"space-around",direction:"row",children:Object.keys(x).map((function(e){return Object(a.jsx)(J.a,{item:!0,children:Object(a.jsx)(V.a,{variant:"contained",onClick:function(){g(H(0).tactics=e)},color:n.tactics===e?"primary":"default",children:x[e].title})})}))}),Object(a.jsx)(J.a,{item:!0,style:{textAlign:"center"},children:Object(a.jsx)("em",{children:x[n.tactics].description})}),Object(a.jsx)(ae,{tactic:n.tactics})]}),Object(a.jsxs)(J.a,{container:!0,item:!0,xs:12,alignItems:"stretch",justify:"flex-start",children:[Object(a.jsx)(J.a,{item:!0,xs:12,style:{textAlign:"center"},children:Object(a.jsx)("strong",{children:"Choose a demon to reincarnate as."})}),Object.keys(b).filter((function(e){var t=!1!==b[e].enabled,n=u.get(T(),["debug","creatures",e,"enabled"],!0);return t&&n})).map((function(n){return T().unlockedMonsters[n]?Object(a.jsx)(J.a,{container:!0,xs:3,justify:"space-around",children:Object(a.jsx)(J.a,{item:!0,xs:12,style:{textAlign:"center",height:"150px"},children:Object(a.jsx)(te.a,{title:Object(a.jsx)("div",{children:b[n].description}),children:Object(a.jsx)(V.a,{variant:"contained",style:{height:"75%",width:"50%"},onClick:function(){e.reincarnate(n,s),t.push("/adventuring")},children:Object(a.jsxs)(J.a,{container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:12,children:Object(a.jsx)("img",{src:R(n)})}),Object(a.jsx)(J.a,{item:!0,xs:12,children:b[n].name})]})})})})}):Object(a.jsx)(J.a,{container:!0,xs:3,justify:"space-around",style:{height:"150px"},children:Object(a.jsx)(J.a,{item:!0,xs:12,style:{textAlign:"center",height:"64%"},children:Object(a.jsx)(te.a,{title:Object(a.jsx)("div",{children:"An unknown type of Demon. Selects a random Demon you have not already played as."}),children:Object(a.jsx)(V.a,{variant:"contained",style:{height:"100%",width:"50%"},onClick:function(){e.reincarnate("random",s),t.push("/adventuring")},children:Object(a.jsx)(J.a,{container:!0,children:Object(a.jsx)(J.a,{item:!0,xs:12,children:"???"})})})})})})}))]})]})}var ce=n(101),re=n(741);function se(e){var t=Object(i.useMemo)((function(){return e.character.currentHp}),[e.character.currentHp.toFixed()]),n=Object(i.useMemo)((function(){return e.character.maximumHp}),[e.character.maximumHp.toFixed()]),r=Object(i.useMemo)((function(){return e.character.attributes}),[e.character.attributes]);return Object(a.jsxs)(c.a.Fragment,{children:[Object(a.jsxs)(J.a,{item:!0,container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:6,children:"Health"}),Object(a.jsxs)(J.a,{item:!0,xs:5,children:[t.toFixed()," / ",n.toFixed()]})]}),Object(a.jsx)(J.a,{container:!0,direction:"row",children:Object.keys(ne).map((function(e){return Object(a.jsx)(J.a,{item:!0,xs:!0,children:Object(a.jsx)(te.a,{title:ne[e].description({rank:Object(j.Decimal)(r[e]).toFixed()}),children:Object(a.jsxs)("div",{style:{textAlign:"center"},children:[Object(a.jsx)("img",{src:ne[e].icon}),Object(a.jsx)("div",{children:Object(a.jsx)("span",{style:{fontSize:"12"},children:ne[e].label})}),Object(a.jsx)("div",{children:Object(j.Decimal)(r[e]).toFixed()})]})})})}))})]})}function oe(e){return Object(a.jsx)(c.a.Fragment,{children:Object.keys(e.character.traits).map((function(t){return Object(a.jsx)(te.a,{title:Object(a.jsxs)(c.a.Fragment,{children:[Object(a.jsxs)("span",{children:["Tier ",Object(j.Decimal)(e.character.traits[t]).toFixed(),": "]}),Object(a.jsx)("span",{dangerouslySetInnerHTML:{__html:O[t].description({rank:Object(j.Decimal)(e.character.traits[t])})}})]}),children:Object(a.jsx)("img",{src:O[t].icon})},t)}))})}function le(e){return Object(a.jsxs)(J.a,{container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:12,children:Object(a.jsx)(te.a,{title:"Your approach to combat",children:Object(a.jsxs)("span",{children:["Utilizing ",x[e.characterTactics].title," Tactics"]})})}),Object(a.jsx)(J.a,{container:!0,direction:"row",children:Object(a.jsx)(ae,{tactic:e.characterTactics})})]})}function ue(e){return{against:function(t){var n=e.combat.precision,a=Object(j.Decimal)(u.get(t,["combat","evasion"],0));return{min:Object(j.Decimal)(p.mechanics.combat.baseMinimumDamageWeight).plus(a.times(3)),med:Object(j.Decimal)(p.mechanics.combat.baseMedianDamageWeight).plus(a).plus(n),max:Object(j.Decimal)(p.mechanics.combat.baseMaximumDamageWeight).plus(n.times(2))}}}}n(409);function me(e){return{against:function(t,n){var a=e.combat.power,i=j.Decimal.min(Object(j.Decimal)(p.mechanics.combat.power.effectPerPoint).plus(1).pow(a),100);f("Attacker ".concat(e.id," has power ").concat(a," for multiplier ").concat(i,"."));var c=u.get(t,["combat","resilience"],a),r=j.Decimal.max(Object(j.Decimal)(1).minus(p.mechanics.combat.power.effectPerPoint).pow(c),.01);f(t?"Defender ".concat(t.id," has resilience ").concat(c," for multiplier ").concat(r,"."):"No target means an effective resilience of ".concat(c," and a multiplier of ").concat(r));var s=i.times(r);return f("Final damage multiplier = ".concat(s,". Min: ").concat(e.combat.minimumDamage.times(s).ceil()," Med: ").concat(e.combat.medianDamage.times(s).ceil()," Max: ").concat(e.combat.maximumDamage.times(s).ceil())),{min:e.combat.minimumDamage.times(s).ceil(),med:e.combat.medianDamage.times(s).ceil(),max:e.combat.maximumDamage.times(s).ceil()}}}}var de=n(747);function he(e){var t=Object(i.useMemo)((function(){return Object.values(e.hitChances).reduce((function(e,t){return e.plus(t)}))}),[e.hitChances,e.calculatedDamage]),n=Object(i.useMemo)((function(){return"Your Power increases the damage your attacks deal by ".concat(Object(j.Decimal)(p.mechanics.combat.power.effectPerPoint).times(e.characterPower).times(100).toFixed(),"%.")}),[e.characterPower]),c=Object(i.useMemo)((function(){return"Your Resilience reduces the damage attacks against you deal by ".concat(Object(j.Decimal)(p.mechanics.combat.resilience.effectPerPoint).times(e.characterResilience).times(100).toFixed(),"%.")}),[e.characterResilience]);return Object(a.jsxs)(J.a,{container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:12,children:Object(a.jsx)("strong",{children:"Combat Statistics"})}),Object(a.jsxs)(J.a,{container:!0,children:[Object(a.jsx)(te.a,{title:n,children:Object(a.jsxs)(J.a,{item:!0,container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:!0,style:{textAlign:"center"},children:"Power"}),Object(a.jsx)(J.a,{item:!0,xs:!0,children:e.characterPower})]})}),Object(a.jsx)(te.a,{title:c,children:Object(a.jsxs)(J.a,{item:!0,container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:!0,style:{textAlign:"center"},children:"Resilience"}),Object(a.jsx)(J.a,{item:!0,xs:!0,children:e.characterResilience})]})}),Object(a.jsx)(te.a,{title:"Your Evasion reduces the severity of hits you take.",children:Object(a.jsxs)(J.a,{item:!0,container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:!0,style:{textAlign:"center"},children:"Evasion"}),Object(a.jsx)(J.a,{item:!0,xs:!0,children:e.characterEvasion})]})}),Object(a.jsx)(te.a,{title:"Your Precision increases the severity of hits you score.",children:Object(a.jsxs)(J.a,{item:!0,container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:!0,style:{textAlign:"center"},children:"Precision"}),Object(a.jsx)(J.a,{item:!0,xs:!0,children:e.characterPrecision})]})})]}),Object(a.jsxs)(J.a,{container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:12,children:Object(a.jsx)("strong",{children:"Hit Chances"})}),Object(a.jsxs)(J.a,{item:!0,container:!0,xs:12,children:[Object(a.jsx)(J.a,{item:!0,xs:!0,children:Object(a.jsx)("em",{children:"Type"})}),Object(a.jsx)(J.a,{item:!0,xs:!0,children:Object(a.jsx)("em",{children:"Chance"})}),Object(a.jsx)(J.a,{item:!0,xs:!0,children:Object(a.jsx)("em",{children:"Damage"})}),Object(a.jsx)(J.a,{item:!0,xs:1})]}),Object(a.jsxs)(J.a,{item:!0,container:!0,xs:12,children:[Object(a.jsx)(J.a,{item:!0,xs:!0,children:"Glancing Hit"}),Object(a.jsxs)(J.a,{item:!0,xs:!0,children:[e.hitChances.min.div(t).times(100).toFixed(2),"%"]}),Object(a.jsx)(J.a,{item:!0,xs:!0,children:e.calculatedDamage.min.toFixed()}),Object(a.jsx)(J.a,{item:!0,xs:1,children:Object(a.jsx)(te.a,{title:"Glancing hits deal 50% less  damage",children:Object(a.jsx)(de.a,{})})})]}),Object(a.jsxs)(J.a,{item:!0,container:!0,xs:12,children:[Object(a.jsx)(J.a,{item:!0,xs:!0,children:"Solid Hit"}),Object(a.jsxs)(J.a,{item:!0,xs:!0,children:[e.hitChances.med.div(t).times(100).toFixed(2),"%"]}),Object(a.jsx)(J.a,{item:!0,xs:!0,children:e.calculatedDamage.med.toFixed()}),Object(a.jsx)(J.a,{item:!0,xs:1,children:Object(a.jsx)(te.a,{title:"Solid hits deal normal damage",children:Object(a.jsx)(de.a,{})})})]}),Object(a.jsxs)(J.a,{item:!0,container:!0,xs:12,children:[Object(a.jsx)(J.a,{item:!0,xs:!0,children:"Critical Hit"}),Object(a.jsxs)(J.a,{item:!0,xs:!0,children:[e.hitChances.max.div(t).times(100).toFixed(2),"%"]}),Object(a.jsx)(J.a,{item:!0,xs:!0,children:e.calculatedDamage.max.toFixed()}),Object(a.jsx)(J.a,{item:!0,xs:1,children:Object(a.jsx)(te.a,{title:"Critical hits deal 50% more damage.",children:Object(a.jsx)(de.a,{})})})]})]})]})}function be(e){var t=Object(i.useMemo)((function(){return R(e.character.appearance)}),[e.character.appearance]),n=N(e.character.powerLevel),c=N(e.character.powerLevel.plus(1)),r=e.character.absorbedPower.minus(n),s=Object(i.useMemo)((function(){return Object(j.Decimal)(e.character.latentPower.times(p.mechanics.reincarnation.latentPowerEffectScale).times(100))}),[e.character.latentPower]),o=Object(i.useMemo)((function(){return ue(e.character).against(e.enemy)}),[e.character,e.enemy]),l=Object(i.useMemo)((function(){return me(e.character).against(e.enemy)}),[e.character,e.enemy]);return Object(a.jsxs)(J.a,{container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:12,children:Object(a.jsx)("img",{src:t,style:{height:"75px"}})}),Object(a.jsxs)(J.a,{item:!0,container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:!0,children:"Level"}),Object(a.jsx)(J.a,{item:!0,xs:!0,children:e.character.powerLevel.toFixed()}),Object(a.jsx)(J.a,{item:!0,xs:!0,children:"Latent Power Bonus"}),Object(a.jsx)(J.a,{item:!0,xs:!0,style:{color:e.character.latentPower.gte(T().latentPowerCap)&&e.character.isPc?"red":"inherit"},children:Object(a.jsx)(te.a,{title:"Latent power multiplies power gain and attributes. Latent power is capped based on the strongest enemy defeated.",children:Object(a.jsxs)("div",{children:[s.toFixed(),"%"]})})})]}),void 0!==e.character.absorbedPower&&Object(a.jsx)(J.a,{item:!0,xs:12,children:Object(a.jsx)("progress",{value:r.div(c).times(100).toNumber(),max:100,title:"".concat(r.toFixed(),"/").concat(c.toFixed())})}),Object(a.jsxs)(J.a,{container:!0,children:[Object(a.jsx)(J.a,{item:!0,container:!0,children:Object(a.jsx)(J.a,{item:!0,xs:!0,children:Object(a.jsx)("strong",{children:"Attributes"})})}),Object(a.jsx)(se,{character:e.character})]}),Object(a.jsx)(he,{hitChances:o,calculatedDamage:l,characterPower:e.character.combat.power.toFixed(),characterResilience:e.character.combat.resilience.toFixed(),characterEvasion:e.character.combat.evasion.toFixed(),characterPrecision:e.character.combat.precision.toFixed()}),Object(a.jsxs)(J.a,{container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:12,children:Object(a.jsx)("strong",{children:"Traits"})}),Object(a.jsx)(oe,{character:e.character})]}),p.mechanics.artifacts.enabled&&Object(a.jsxs)(J.a,{container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:12,children:Object(a.jsx)("strong",{children:"Artifacts"})}),Object(a.jsx)(J.a,{children:JSON.stringify(e.character.items)})]}),Object(a.jsx)(le,{characterTactics:e.character.tactics})]})}var ge={root:{width:"25%",backgroundColor:"#eeeeee"}};function pe(e){return Object(a.jsx)(re.a,{style:ge.root,elevation:2,children:Object(a.jsx)(be,{character:e.player,enemy:e.enemy})})}var fe={root:{height:"100%",display:"flex",flex:"0"},buttons:{width:"100%"}};function je(e){var t=Object(U.d)(),n=Object(i.useMemo)((function(){return H(0).powerLevel.gt(1)||!H(0).isAlive}),[H(0).powerLevel,H(0).isAlive]);return Object(a.jsx)("div",{style:fe.root,children:Object(a.jsxs)(J.a,{container:!0,direction:"column",children:[Object(a.jsx)(J.a,{item:!0,xs:!0,children:n&&Object(a.jsx)(V.a,{onClick:function(){return t.push("/reincarnating")},style:fe.buttons,variant:"contained",color:"secondary",disabled:!n,children:"Reincarnate"})}),Object(a.jsx)(J.a,{item:!0,xs:!0,children:e.automaticReincarnateEnabled&&Object(a.jsxs)(re.a,{style:{width:"100%",backgroundColor:"orange"},children:["Automatic Reincarnation Enabled (Strongest enemy defeated: Level ",Object(j.Decimal)(T().highestLevelEnemyDefeated).toFixed(),")"]})})]})})}function xe(e){return Object(a.jsxs)(J.a,{item:!0,container:!0,xs:!0,children:[Object(a.jsxs)(J.a,{item:!0,xs:12,container:!0,direction:e.direction,children:[Object(a.jsx)(J.a,{item:!0,xs:6,children:Object(a.jsxs)("div",{style:{display:"flex",alignItems:"center"},children:[e.isRival&&Object(a.jsx)("img",{src:"./icons/icons-793.png"}),e.name]})}),Object(a.jsx)(J.a,{item:!0,xs:6,children:Object(a.jsx)("meter",Object(z.a)({style:{width:"80%"},low:33,high:66,optimum:100,min:0,max:100,value:e.currentHp.div(e.maximumHp).times(100).floor().toNumber()},"max",100))})]}),Object(a.jsx)(J.a,{container:!0,item:!0,xs:12,style:{height:"40px"},direction:e.direction,children:e.statuses&&Object.keys(e.statuses).map((function(t){var n=Object.keys(v[t].effects).reduce((function(n,a){switch(a){case"power_modifier":case"evasion_modifier":case"precision_modifier":case"evasion_modifier":case"accuracy_modifier":n[a]=j.Decimal.abs(Object(j.Decimal)(1).minus(Object(j.Decimal)(1).plus(Object(j.Decimal)(v[t].effects[a])).pow(e.statuses[t])).times(100))}return n}),{});return Object(a.jsx)(J.a,{item:!0,xs:1,children:Object(a.jsx)(te.a,{title:v[t].description(n),children:Object(a.jsx)("img",{src:v[t].icon})})})}))})]})}var ve={history:{height:"15%",flexDirection:"column",overflowY:"scroll"}},Oe=function(e){return Object(a.jsx)(re.a,{style:ve.history,children:e.actionLog.map((function(e){return function(e){return Object(a.jsxs)(J.a,{container:!0,direction:"row-reverse",style:{textAlign:"center"},children:[Object(a.jsx)(J.a,{item:!0,xs:11,children:Object(a.jsx)("span",{dangerouslySetInnerHTML:{__html:e.message}})}),e.tick&&Object(a.jsxs)(J.a,{item:1,children:[e.tick,": "]})]},e.uuid)}(e)}))})};var ye={root:{display:"flex",flex:"1 0 auto",justifyContent:"flex-end",flexDirection:"column"},actions:{container:{display:"flex",justifyContent:"space-between",flexDirection:"row"},buttons:{alignSelf:"flex-end",flex:"1"}},action:{maxHeight:"15%",width:"100%",display:"flex",flexDirection:"column"},actionProgress:{width:"100%"},history:{height:"15%",flexDirection:"column",overflowY:"scroll"},combat:{}};function we(e){if(!e.currentAction)throw new Error("No current action");var t=e.enemy?I(p.encounters.chanceToEscapeGreater,{player:e.player,enemy:e.enemy}):Object(j.Decimal)(100),n=e.enemy?I(p.encounters.chanceToIntimidateLesser,{player:e.player,enemy:e.enemy}):Object(j.Decimal)(100);return Object(a.jsxs)("div",{style:ye.root,onMouseEnter:e.startManualSpeedup,onMouseLeave:e.stopManualSpeedup,children:[Object(a.jsx)(re.a,{style:ye.actions.container,children:Object(a.jsx)(V.a,{style:ye.actions.buttons,onClick:function(){T().paused=!T().paused,e.togglePause(T().paused)},children:e.paused?"Unpause":"Pause"})}),Object(a.jsxs)(re.a,{style:ye.actions.container,children:[ke("fighting","Fight","Combat the enemy. On victory, steal some of the power of the vanquished foe.",e),ke("fleeing","Flee","Attempt to escape. Your chance is  ".concat(t,"%."),e),ke("intimidating","Intimidate","Try to cow the enemy, compelling them to continuously provide you a portion of their life force. Your chance is ".concat(n,"%"),e),u.get(p,"features.negotiating.enabled")&&ke("negotiating","Negotiate","Combat the enemy. On victory, steal some of the power of the vanquished foe.",e)]}),Object(a.jsx)(re.a,{style:ye.combat.details,children:Object(a.jsxs)(J.a,{container:!0,children:[Object(a.jsx)(xe,{name:"Player",currentHp:e.player.currentHp,maximumHp:e.player.maximumHp,statuses:u.get(e.player,"statuses"),direction:"row"}),Object(a.jsx)(xe,{name:u.get(e.enemy,"name"),currentHp:u.get(e.enemy,"currentHp",Object(j.Decimal)(0)),maximumHp:u.get(e.enemy,"maximumHp",Object(j.Decimal)(100)),statuses:u.get(e.enemy,"statuses"),direction:"row-reverse",isRival:u.get(e.enemy,"isRival")})]})}),Object(a.jsxs)(re.a,{style:ye.action,children:[Object(a.jsx)("strong",{children:e.currentAction.description}),Object(a.jsx)("progress",{style:ye.actionProgress,value:e.actionTime,max:u.get(e.state,e.currentAction.duration)})]}),Object(a.jsx)(Oe,{actionLog:e.actionLog})]})}function ke(e,t,n,i){return Object(a.jsx)(te.a,{title:n,children:Object(a.jsx)(V.a,{onClick:function(){return i.setNextAction(e)},style:ye.actions.buttons,disabled:"approaching"!==i.currentAction.id,variant:i.nextActionName===e?"contained":"outlined",color:i.nextActionName===e?"primary":"default",children:t})})}var De={alive:{width:"25%",backgroundColor:"#eeeeee"},dead:{width:"25%",backgroundColor:"#b3827f"}};function _e(e){return Object(a.jsx)(re.a,{style:!e.enemy||e.enemy.isAlive?De.alive:De.dead,children:e.enemy&&Object(a.jsx)(be,{enemy:e.player,character:e.enemy})})}var Pe=function(){function e(t,n){Object(d.a)(this,e),this.id=t.id,this.attributes=new w({brutality:t.attributes.baseBrutality,deceit:t.attributes.baseDeceit,cunning:t.attributes.baseCunning,madness:t.attributes.baseMadness},t),this.party=n,this.hp=t.currentHp,this._speed=t.speed,this.maximumHp=t.maximumHp,this.fatigue=0,this.lastActed=0,this.modifiers=[],this.tactics=t.tactics,this.traits=Object(m.a)({},t.traits),this.damage={min:t.combat.minimumDamage,med:t.combat.medianDamage,max:t.combat.maximumDamage},this.statuses=Object(m.a)({},t.statuses),this.powerLevel=t.powerLevel}return Object(h.a)(e,[{key:"combat",get:function(){return{precision:Object(j.Decimal)(this.precision),evasion:Object(j.Decimal)(this.evasion),power:Object(j.Decimal)(this.power),resilience:Object(j.Decimal)(this.resilience),minimumDamage:Object(j.Decimal)(this.damage.min),medianDamage:Object(j.Decimal)(this.damage.med),maximumDamage:Object(j.Decimal)(this.damage.max)}}},{key:"damageFromFatigue",get:function(){var e=this.maximumHp,t=x[this.tactics].modifiers.fatigue_multiplier||0,n=Object(j.Decimal)(1).plus(t);return e.times(n).div(100).floor()}},{key:"speed",set:function(e){this._speed=e},get:function(){var e=this._speed,t=this.modifiers.reduce((function(e,t){if(t.effects.speed){var n=t.effects.speed.percent.plus(100)/100;return e.plus(n)}return e}),u.get(p.tactics,this.tactics,1));return e.times(t)}},{key:"isAlive",get:function(){return this.hp.gt(0)}},{key:"accuracy",get:function(){var e=Object(j.Decimal)(p.mechanics.combat.baseHitChance),t=Object(j.Decimal)(1).minus(Object(j.Decimal)(v.restrained.effects.accuracy_modifier).times(this.statuses.restrained||0));return e.times(t)}},{key:"canAct",get:function(){return Object.keys(this.statuses).reduce((function(e,t){return e&&!v[t].effects.skip_turn}),!0)}},{key:"power",get:function(){return _(this,"power")}},{key:"resilience",get:function(){return _(this,"resilience")}},{key:"precision",get:function(){return _(this,"precision")}},{key:"evasion",get:function(){return _(this,"evasion")}}]),e}();n(413);function Se(e,t){var n={rounds:[],winner:null,combatantCombatStats:{}};u.flatMap(t.parties.map((function(e,t){return e.map((function(e){n.combatantCombatStats[e.id]=new Pe(e,t)}))}))),f("Beginning combat"),Object.values(n.combatantCombatStats).forEach((function(t){var a=[];Ee(t,null,Object.values(n.combatantCombatStats),{type:"on_combat_start",actor:t},0,{combat:n,round:{effects:a}},e),a.forEach((function(e){n.rounds.push(e)}))}));for(var a=0,i=function(){var i,c=(i=n,Object.values(i.combatantCombatStats).reduce((function(e,t){return e[t.speed.toNumber()]?e[t.speed.toNumber()].push(t):e[t.speed.toNumber()]=[t],e}),{}));Object.keys(c).forEach((function(i){c[i].forEach((function(i){var c=[];if(Ee(i,null,Object.values(n.combatantCombatStats),{type:"on_round_start"},a,{combat:n,round:{effects:c}},e),c.forEach((function(e){n.rounds.push(e)})),a=i.lastActed+i.speed.toNumber(),i.lastActed=a,f("Tick ".concat(a,": Resolving action by character '").concat(i.id,"'.")),i.hp.lte(0))f("Tick ".concat(a,": Character ").concat(i.id," was dead when their turn to act came up, skipping their action."));else{var r=(i.party+1)%2,s=t.parties[r].filter((function(e){return n.combatantCombatStats[e.id].hp.gt(0)})),o=n.combatantCombatStats[u.get(s[Math.floor(e.double()*s.length)],"id")];if(void 0!==o){if(i.canAct){f("Tick ".concat(a,": Attacking ").concat(o));var m=function(e,t,n,a){var i=e.accuracy.plus(Math.floor(100*a.double()));return{rawRoll:i,total:i}}(i,0,0,e);switch(I(p.mechanics.combat.determineHit,{roll:m.total,target:100})){case"hit":f("Tick ".concat(a,": ").concat(i.id," rolled ").concat(m.total,", a hit.")),function(e,t,n,a,i){if("object"!==typeof n)throw new Error("Acting character was not an object!");if("object"!==typeof a)throw new Error("Target character was not an object!");var c,r=ue(n).against(a),s=me(n).against(a,p.debug.enabled),o=Math.floor(100*i.double());o<=r.min?(c="min",f("Tick ".concat(e,": Damage roll ").concat(o,", a glancing hit."))):o<=r.med.plus(r.min)?(c="med",f("Tick ".concat(e,": Damage roll ").concat(o,", a solid hit."))):(c="max",f("Tick ".concat(e,": Damage roll ").concat(o,", a critical hit.")));var u=s[c],m={baseDamage:u,hitType:c,attackMultiplier:Object(j.Decimal)(0),defenseDivisor:Object(j.Decimal)(0),effects:[]};Ee(n,a,Object.values(t.combatantCombatStats),{type:"on_hitting",actor:n,target:a},e,{combat:t,attack:m},i);var d=j.Decimal.max(.01,m.attackMultiplier.minus(m.defenseDivisor).plus(1)),h=u.times(d).ceil();f("Damage started off as ".concat(u.toFixed(),", with an attack factor of ").concat(m.attackMultiplier," and a target defense factor of ").concat(m.defenseDivisor,", for a total factor of ").concat(d," and a final damage of ").concat(h.toFixed())),a.hp=a.hp.minus(h),m.finalDamage=h,f("Tick ".concat(e,": Hit did ").concat(h.toFixed(),". Additional effects: ").concat(m.effects.map((function(e){switch(e.event){case"apply_effect":return"Applying effect ".concat(e.effect," with from ").concat(e.source," to ").concat(e.target.id,".");case"add_statuses":return"Adding status ".concat(e.status," with rank ").concat(e.rank," to ").concat(e.target)}})).join(", "),". Character ").concat(a.id," has ").concat(a.hp," remaining.")),Ee(a,n,Object.values(t.combatantCombatStats),{type:"on_taking_damage",actor:n,target:a},e,{combat:t,attack:m},i),m.effects.forEach((function(e){switch(e.event){case"damage":t.combatantCombatStats[e.target].hp=t.combatantCombatStats[e.target].hp.minus(e.value)}})),t.rounds.push(function(e,t,n,a,i){return{uuid:Object(l.v4)(),tick:e,result:"hit",target:n,actor:t,effects:[{event:"damage",value:a,target:n}].concat(Object(ce.a)(i))}}(e,n.id,a.id,h,m.effects))}(a,n,i,o,e);break;default:f("Tick ".concat(a,": ").concat(i.id," rolled ").concat(m.total,", a miss.")),function(e,t,n,a,i){t.rounds.push(function(e,t,n){return{uuid:Object(l.v4)(),tick:e,result:"miss",target:n,actor:t,effects:[]}}(e,n.id,a.id))}(a,n,i,o)}}else f("".concat(a,": Character skips their action.")),function(e,t,n){t.rounds.push(function(e,t){return{uuid:Object(l.v4)(),tick:e,result:"action_skipped",actor:t,effects:[]}}(e,n.id))}(a,n,i);Object.keys(n.combatantCombatStats).forEach((function(e){n.combatantCombatStats[e].hp.lte(0)&&(f("Tick ".concat(a,": Combatant ").concat(e," died")),n.rounds.push({uuid:Object(l.v4)(),tick:a,actor:i.id,target:Number.parseInt(e),result:"kill"}))})),i.modifiers=i.modifiers.map((function(e){return e.roundDuration=Object(j.Decimal)(e.roundDuration).minus(1),e})).filter((function(e){return Object(j.Decimal)(e.roundDuration).gt(0)}));var d=[];if(Ee(i,null,Object.values(n.combatantCombatStats),{type:"on_round_end",actor:i},a,{combat:n,round:{effects:d}},e),i.fatigue=Object(j.Decimal)(i.fatigue||0).plus(1),i.powerLevel.div(2).plus(3).lt(i.fatigue)){var h=j.Decimal.max(i.damageFromFatigue.floor(),1);i.hp=j.Decimal.max(i.hp.minus(h),0),n.rounds.push({uuid:Object(l.v4)(),result:"fatigue-damage",value:h,actor:i.id})}Object.keys(i.statuses).filter((function(e){return v[e].decays})).forEach((function(e){i.statuses[e]=i.statuses[e].minus(1),Object(j.Decimal)(0).lte(i.statuses[e]||0)&&(delete i.statuses[e],n.rounds.push({uuid:Object(l.v4)(),tick:a,actor:i.id,result:"status-removed",status:e}))})),d.forEach((function(e){n.rounds.push(e)}))}else f("Tick ".concat(a,": No valid target, skipping action by ").concat(i.id,"."))}}))}));var r=t.parties[0].every((function(e){return n.combatantCombatStats[e.id].hp.lte(0)})),s=t.parties[1].every((function(e){return n.combatantCombatStats[e.id].hp.lte(0)}));r||s?r?(f("Every member of party 0 is dead"),n.rounds.push({uuid:Object(l.v4)(),tick:a,winner:1,result:"combat-end"}),n.winner=1):s&&(f("Every member of party 1 is dead"),n.rounds.push({uuid:Object(l.v4)(),tick:a,winner:0,result:"combat-end"}),n.winner=0):f("No winner, combat continues")};null===n.winner;)i();return n}function Le(e,t,n,a,i){return n.filter((function(n){switch(a){case"attacker":return e.id==n.id;case"attacked":return t.id==n.id;case"all_enemies":return(0===e.id?0:1)!==n.party;default:throw new Error}}))}function Ee(e,t,n,a,i,c,r){f("Triggering event ".concat(a.type)),Object.keys(e.traits).forEach((function(t){var n;!function(e,t,n,a,i,c,r,s){var o=i.type,l=Ae.includes(o)?c.round.effects:c.attack.effects,u=Object(j.Decimal)(e.attributes[p.mechanics.combat.traitRank.baseAttribute]).times(p.mechanics.combat.traitRank.effectPerPoint).div(100);if(a=j.Decimal.min(Object(j.Decimal)(a).plus(Object(j.Decimal)(a).times(u)).floor(),100),f("Character has a bonus to rank of ".concat(e.attributes.madness.toFixed(),"% from madness, for an effective rank of ").concat(a)),f("Tick ".concat(r,": Determining if trait ").concat(n.name," applies")),n[o]){var m=n[o];void 0!==m.conditions&&f("Trait has conditions"),(void 0===m.conditions||Object.keys(m.conditions).every((function(e){switch(e){case"critical_hit":return"max"===c.attack.hitType;case"health_percentage":return Le(i.actor,i.target,Object.values(c.combat.combatantCombatStats),"all_enemies").reduce((function(t,n){var a=Object(j.Decimal)(m.conditions[e].below),i=n.hp,c=n.maximumHp,s=i.mul(100).div(c),o=a.gte(s);return f("Tick ".concat(r,": Target health percentage is ").concat(s,", which is ").concat(o?"":"not"," enough to trigger.")),t&&o}),!0);case"chance":var t=I(n[o].conditions[e],{$rank:a}),l=Math.floor(100*s.double())+1;return t>=l?(f("Chance to trigger ".concat(t," with roll ").concat(l,": success")),!0):(f("Chance to trigger ".concat(t," with roll ").concat(l,": failure.")),!1);default:return!1}})))&&(f("Tick ".concat(r,": Effect triggered, applying effects")),Object.keys(n[o].effects).forEach((function(t){switch(t){case"damage_modifier":var s=I(n[o].effects[t].percent,{$rank:a});if(s){var u=c.attack.attackMultiplier.plus(s);f("Tick ".concat(r,": Applying ").concat(s.toFixed()," modifier to damage, changing damage multiplier from ").concat(c.attack.attackMultiplier.div(100).toFixed()," to ").concat(u.div(100).toFixed())),c.attack.attackMultiplier=u}break;case"damage":var m=n[o].effects.target,d=I(n[o].effects.damage,{$rank:Object(j.Decimal)(a),attackDamage:c.attack.finalDamage}).floor();f("Inflicting ".concat(d," damage to ").concat(m)),d.gt(0)&&Le(i.actor,i.target,Object.values(c.combat.combatantCombatStats),m).forEach((function(e){l.push({event:"damage",value:d,target:e.id})}));break;case"defense_modifier":var h=I(n[o].effects[t].percent,{$rank:a}).div(100).plus(1),b=c.attack.defenseDivisor.times(h);f("Tick ".concat(r,": Applying ").concat(h," modifier to defense, changing defense multiplier from ").concat(c.attack.defenseDivisor.toFixed()," to ").concat(b.toFixed())),c.attack.defenseDivisor=b;break;case"add_statuses":var g=n[o].effects.add_statuses;Object.keys(g).forEach((function(t){var n=g[t].target,s=Le(i.actor,i.target,Object.values(c.combat.combatantCombatStats),n),o=I(g[t].rank,{rank:a});s.forEach((function(n){Object(j.Decimal)(n.statuses[t]||0).lt(o)&&(n.statuses[t]=o,l.push({event:"add_statuses",result:"add_statuses",source:e.id,target:n.id,status:t,level:o,tick:r}))}))}))}})))}}(e,0,(n=t,O[n]),e.traits[t],a,c,i,r)}))}var Ae=["on_round_start","on_combat_start","on_round_end"],Te=n(130);function Ce(e){var t={original:e,tick:e.tick};if(e.message)return e;switch(e.result){case"hit":t.message="".concat(H(e.actor).name," hit! ").concat(e.effects.map((function(t){return Me(e.target,t)})).join(" "));break;case"miss":t.message="".concat(H(e.actor).name," ").concat(0===e.actor?"miss":"missed","! ").concat(e.effects.map((function(t){return Me(e.target,t)})).join(" "));break;case"kill":t.message="<strong>".concat(H(e.target).name," ").concat(0===e.target?"Were":"Was"," Killed!</strong>");break;case"gainedPower":t.message="You absorbed ".concat(e.value.toFixed()," power.");break;case"healed":t.message="".concat(H(e.target).name," gained ").concat(e.value," health.");break;case"escaped":t.message="You escaped";break;case"action_skipped":t.message="".concat(H(e.actor).name," lost ").concat(0===e.actor?"your":"their"," action.");break;case"intimidated":t.message="".concat(H(e.target).name," was Bound to you, granting you ").concat(e.value.toFixed()," power while you explore.");break;case"enemy-fled":t.message="".concat(H(e.target).name," Fled!");break;case"combat-end":t.message="Battle ended",delete t.tick;break;case"add_statuses":t.message="".concat(H(e.target).name," ").concat(0===e.target?"gain":"gained"," ").concat(Object(j.Decimal)(e.level).toFixed()," ").concat(Object(j.Decimal)(e.level).eq(1)?"level":"levels"," of ").concat(v[e.status].name);break;case"status-removed":t.message="".concat(v[e.status].name," was removed from ").concat(H(e.actor).name,".");break;case"fatigue-damage":t.message="Extreme exhaustion deals ".concat(e.value," damage to ").concat(H(e.actor).name,".");break;default:f("".concat(JSON.stringify(e)))}return t}function Me(e,t){switch(t.event){case"damage":return"".concat(H(t.target).name," ").concat(0==t.target?"take":"takes"," ").concat(t.value," Damage.");case"add_statuses":return"".concat(H(t.target).name," gained ").concat(Object(j.Decimal)(t.level).toFixed()," of ").concat(v[t.status].name,".")}}var He,Fe={root:{display:"flex",flex:"1",flexDirection:"row",justifyContent:"space-between",overflow:"hidden"},image:{position:"absolute",height:"100%",left:0},background:{position:"absolute",height:"100%",width:"100%",left:0}};function Re(e){return T().currentAction=e,T().currentAction}function Ie(e){T().actionLog.length>(p.actionLog.maxSize||10)&&T().actionLog.pop(),T().actionLog.unshift(Ce(e))}function Ne(e){var t=Object(i.useRef)(0),n=Object(i.useState)(u.get(T(),["currentEncounter","enemies",0])),c=Object(o.a)(n,2),r=c[0],s=c[1],m=Object(i.useState)(T().actionLog),d=Object(o.a)(m,2),h=d[0],b=d[1],g=Object(i.useState)(T().currentEncounter),x=Object(o.a)(g,2),v=(x[0],x[1]),y=Object(i.useState)(G[T().currentAction]),w=Object(o.a)(y,2),k=w[0],D=w[1],_=Object(i.useState)(T().nextAction),P=Object(o.a)(_,2),S=P[0],L=P[1],E=Object(i.useState)(T().paused),M=Object(o.a)(E,2),F=M[0],R=M[1],N=Object(i.useState)(0),W=Object(o.a)(N,2),Y=W[0],B=W[1],K=Object(i.useState)(H(0)),J=Object(o.a)(K,2),V=J[0],X=(J[1],Object(i.useRef)(!1)),Z=Object(i.useState)(T().automaticReincarnate),Q=Object(o.a)(Z,2),ee=(Q[0],Q[1]);Object(U.d)();return Object(Te.a)("p",(function(){return T().paused=!T().paused})),Object(i.useEffect)((function(){var n;function a(e,t){if(void 0!==t&&e.tick&&e.tick!==t)f("Not consuming an action for tick ".concat(e.tick," on tick ").concat(t));else{switch(Ie(e),e.result){case"combat-end":return void(H(0).isAlive?p.mechanics.artifacts.enabled?D(G[Re("looting")]):D(G[Re("exploring")]):D(G[Re("reincarnating")]));case"kill":var n=H(e.target);if(0===e.actor&&0!==e.target){f("Player killed an enemy and gained power.");var i=H(0),c=I(p.mechanics.xp.gainedFromOtherDemon,{enemy:n}),r=Object.keys(i.traits).reduce((function(e,t){var n=I(u.get(O[t].on_kill,["effects","power_gain_modifier"],0),{rank:Object(j.Decimal)(i.traits[t])});return e.plus(n)}),Object(j.Decimal)(1)),s=i.powerLevel;if(Ie(Ce({result:"gainedPower",value:i.gainPower(c.times(r).floor())})),!s.eq(i.powerLevel)){var o=i.currentHp;i.currentHp=i.maximumHp,Ie({message:"The surge of new power heals you for ".concat(i.currentHp.minus(o)," health."),uuid:Object(l.v4)()})}T().automaticReincarnate||(T().highestLevelEnemyDefeated=j.Decimal.max(T().highestLevelEnemyDefeated,n.powerLevel)),T().highestLevelReached=j.Decimal.max(T().highestLevelReached,H(0).powerLevel),n.isRival&&(T().rival={},Ie({message:"You've defeated your rival!",uuid:Object(l.v4)()}))}else 0===e.target&&(Object(j.Decimal)(n.powerLevel).gt(T().rival.level||0)&&(T().rival={level:n.powerLevel,type:n.appearance,traits:n.traits,tactics:n.tactics},Ie({message:"<strong>You have a new rival!</strong>",uuid:Object(l.v4)()})),H(0).currentHp=Object(j.Decimal)(0));break;case"hit":case"miss":(e.effects||[]).forEach((function(e){var t=H(e.target);switch(e.event){case"damage":t.currentHp=t.currentHp.minus(e.value),t.currentHp.lt(Object(j.Decimal)(0))&&(t.currentHp=Object(j.Decimal)(0));break;case"add_statuses":H(e.target).statuses[e.status]=e.level}}));break;case"fatigue-damage":var m=H(e.actor);m.currentHp=m.currentHp.minus(e.value);break;case"add_statuses":H(e.target).statuses[e.status]=e.level;break;case"status-removed":delete H(e.actor).statuses[e.status];case"action_skipped":break;default:throw new Error}T().currentEncounter.pendingActions.shift(),C();var d=T().currentEncounter.pendingActions[0];d&&a(d,e.tick)}}return console.log("Adventuring Page"),n=requestAnimationFrame((function i(c){if(He){if(!T().paused){H(0);if(t.current>=u.get(T(),G[T().currentAction].duration)){var r=H(0);switch(C(),t.current=0,T().currentAction){case"exploring":H(0).powerLevel.gte(p.mechanics.maxLevel)&&(Ie({message:"Congratulations, you've reached the level cap. \ud83d\udc4d",uuid:Object(l.v4)()}),R(T().paused=!0)),H(0).isAlive&&(v(T().currentEncounter=null),s(null)),H(0).clearStatuses();var o=!1;if(H(0).currentHp.lt(H(0).maximumHp)){var m=I(p.mechanics.combat.randomEncounterChance,{player:r}),d=m.lte(0)||H(0).currentHp.plus(H(0).healing).gt(H(0).maximumHp)?H(0).maximumHp.minus(H(0).currentHp):H(0).healing;H(0).currentHp=H(0).currentHp.plus(d),Ie({message:"You naturally healed ".concat(d," health"),uuid:Object(l.v4)()});var h=Math.floor(100*e.rng.double())+1;f("Determining if encounter occurs. Chance ".concat(m," vs roll ").concat(h,".")),m.gte(h)?o=!0:m.eq(0)?Ie({message:"Your weak spiritual energy keeps you hidden while you heal.",uuid:Object(l.v4)()}):Ie({message:"You don't find any trouble while you recover.",uuid:Object(l.v4)()})}else o=!0;if(o){if(T().currentEncounter=$[T().currentRegion].startEncounter(H(0),e.rng),v(T().currentEncounter),s(T().currentEncounter.enemies[0]),D(G[Re("approaching")]),T().nextAction=T().currentEncounter.enemies.reduce((function(e,t){return"fighting"!==e?e:r.otherDemonIsLesserDemon(t)?"intimidating":r.otherDemonIsGreaterDemon(t)?"fleeing":"fighting"}),"fighting"),L(T().nextAction),T().passivePowerIncome.gt(0)){var g=H(0).gainPower(T().passivePowerIncome);Ie({message:"Your Bound lesser demons grant you ".concat(g.toFixed()," power."),uuid:Object(l.v4)()}),T().highestLevelReached=j.Decimal.max(T().highestLevelReached,H(0).powerLevel)}C()}break;case"approaching":T().currentEncounter.enemies[0];switch(T().nextAction){case"fighting":var x=T().currentEncounter.enemies,O=Se(e.rng,{parties:[[r],x]});T().currentEncounter.pendingActions=O.rounds,s(x[0])}D(G[Re(T().nextAction)]),L(),Object.keys(T().characters).filter((function(e){return"0"!==e&&!T().currentEncounter.enemies.find((function(t){return t.id==e}))})).forEach((function(e){delete T().characters[e]}));break;case"intimidating":var y=T().currentEncounter.enemies[0],w=I(p.encounters.lesserDemonInstantKillLevel,{highestLevelEnemyDefeated:T().highestLevelEnemyDefeated});y.powerLevel.lte(w)&&(Ie({message:"Your force of will seizes control of ".concat(y.name,"'s mind!"),uuid:Object(l.v4)()}),D(G[Re("exploring")]));var k=Object(j.Decimal)(y.powerLevel.lte(w)?999:I(p.encounters.chanceToIntimidateLesser,{enemy:y,player:H(0)})),_=Math.floor(100*e.rng.double())+1;if(k.gte(_)){var P=I(p.mechanics.xp.gainedFromLesserDemon,{enemy:y});Ie(Ce({result:"intimidated",target:y.id,value:P})),T().passivePowerIncome=T().passivePowerIncome.plus(P)}else Ie(Ce({message:"".concat(H(y.id).name," escaped! (You rolled ").concat(_," vs ").concat(k," chance to Bind).")})),v(T().currentEncounter=null);D(G[Re("exploring")]);break;case"fleeing":var S=T().currentEncounter.enemies[0],E=I(p.encounters.chanceToEscapeGreater,{enemy:S,player:H(0)}),M=Math.floor(100*e.rng.double())+1;if(E.gte(M)){Ie({result:"escaped",uuid:Object(l.v4)()});var F=I(p.mechanics.xp.gainedFromGreaterDemon,{enemy:S}),N=r.gainPower(F);T().highestLevelReached=j.Decimal.max(T().highestLevelReached,H(0).powerLevel),Ie(Ce({result:"gainedPower",value:N})),T().currentEncounter=null,v(null),D(G[Re("exploring")])}else{Ie({message:"The ".concat(S.name," caught you! (Roll ").concat(M," vs ").concat(E,")"),uuid:Object(l.v4)()});var W=T().currentEncounter.enemies,Y=Se(e.rng,{parties:[[r],W]});T().currentEncounter.pendingActions=Y.rounds,s(W[0]),L(G[Re("fighting")]),D(G[Re("fighting")])}break;case"fighting":var K=I(p.encounters.lesserDemonInstantKillLevel,{highestLevelEnemyDefeated:T().highestLevelEnemyDefeated}),U=T().currentEncounter.enemies[0];if(U.powerLevel.lte(K))Ie({message:"The raw power of your killer instinct destroys ".concat(U.name,"!"),uuid:Object(l.v4)()}),T().currentEncounter.pendingActions=[{uuid:Object(l.v4)(),result:"kill",target:U.id,actor:0,tick:0},{uuid:Object(l.v4)(),result:"combat-end",tick:0}],a({uuid:Object(l.v4)(),result:"kill",target:U.id,actor:0,tick:0});else if(T().currentEncounter.pendingActions.length)a(T().currentEncounter.pendingActions[0]),b(Object(ce.a)(T().actionLog));else D(G[Re("fleeing")]);break;case"looting":Math.floor(666*e.rng.double());T().currentEncounter.encounterLevel,D(G[Re("exploring")]);break;case"reincarnating":ee(T().automaticReincarnate=!0);var z=H(0);q(H(0).appearance,{brutality:z.attributes.baseBrutality,cunning:z.attributes.baseCunning,deceit:z.attributes.baseDeceit,madness:z.attributes.baseMadness}),D(G[Re("exploring")]);break;default:if(p.debug)throw new Error("Action ".concat(T().currentAction," not supported."));v(),D(G[Re("exploring")]),b([])}}B(t.current);var J=(c-He)*(X.current?function(){var e=u.get(A,["debug","manualSpeedMultiplier"]),t=A.manualSpeedMultiplier;return e||t}():1);0===Math.min(t.current+J,u.get(T(),G[T().currentAction].duration))&&(t.current+J===0?f("Timestamp ".concat(c,", last time ").concat(He)):f("Action duration was 0")),t.current=Math.min(t.current+J,u.get(T(),G[T().currentAction].duration))}}else He=c;He===c&&f("New and previous timestamp were identical"),He=c,n=requestAnimationFrame(i),b(Object(ce.a)(T().actionLog))})),function(){console.log("Cancel frame"),cancelAnimationFrame(n)}}),[]),Object(a.jsxs)("div",{className:"App",style:Fe.root,onMouseOver:function(){return X.current=!0},onMouseLeave:function(){return X.current=!1},children:[Object(a.jsxs)("div",{id:"background",style:{position:"absolute",zIndex:"-10",overflow:"hidden",height:"100vh",width:"100vw"},children:[Object(a.jsx)("img",{style:Fe.background,src:"./backgrounds/parallax-demon-woods-bg.png"}),Object(a.jsx)("img",{style:Fe.image,src:"./backgrounds/parallax-demon-woods-far-trees.png"}),Object(a.jsx)("img",{style:Fe.image,src:"./backgrounds/parallax-demon-woods-mid-trees.png"}),Object(a.jsx)("img",{style:Fe.image,src:"./backgrounds/parallax-demon-woods-close-trees.png"})]}),Object(a.jsx)(pe,{player:V,enemy:r}),Object(a.jsxs)("div",{style:{display:"flex",flex:"1 0 auto",maxHeight:"100%",flexDirection:"column"},children:[Object(a.jsx)(je,{character:V,automaticReincarnateEnabled:T().automaticReincarnate}),Object(a.jsx)(we,Object(z.a)({state:T(),actionLog:h,player:V,enemy:r,togglePause:function(){T().paused=!T().paused,R(T().paused)},paused:F,nextActionName:S,currentAction:k,setNextAction:function(e){L(T().nextAction=e)},actionTime:Y,startManualSpeedup:e.startManualSpeedup,stopManualSpeedup:e.stopManualSpeedup},"togglePause",(function(e){return R(e)})))]}),Object(a.jsx)(_e,{player:V,enemy:r})]})}var We=n(742),qe=n(178),Ye=n.n(qe),Be=n(179),$e=n.n(Be),Ge={root:{position:"absolute",minHeight:"100vh",bottom:0,left:0,padding:"20px"}};function Ke(e){var t=Object(i.useState)(u.get(T(),["debug","creatures"])),n=Object(o.a)(t,2),c=n[0],r=n[1],s=Object(i.useState)(u.get(T(),["debug","regions"])),l=Object(o.a)(s,2),d=l[0],h=l[1],g=Object(i.useState)(u.get(T(),["debug","encounters","minLevel"],H(0).powerLevel.minus(p.encounters.lesserLevelScale).lt(Object(j.Decimal)(1))?Object(j.Decimal)(1):H(0).powerLevel.minus(p.encounters.lesserLevelScale))),f=Object(o.a)(g,2),x=f[0],v=f[1],O=Object(i.useState)(u.get(T(),["debug","encounters","maxLevel"],H(0).powerLevel.plus(p.encounters.greaterLevelScale).gt(100)?Object(j.Decimal)(100):H(0).powerLevel.plus(2*p.encounters.greaterLevelScale))),y=Object(o.a)(O,2),w=y[0],k=y[1],D=Object(i.useState)(u.get(T(),["debug","manualSpeedMultiplier"],T().manualSpeedMultiplier)),_=Object(o.a)(D,2),P=_[0],S=_[1],E=Object(i.useState)(H(0).absorbedPower),C=Object(o.a)(E,2),M=C[0],F=C[1];return Object(a.jsx)(re.a,{style:Ge.root,disabled:!0,children:Object(a.jsxs)(J.a,{container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:12,style:{textAlign:"center"},children:Object(a.jsx)("h3",{children:"Debug Menu"})}),Object(a.jsxs)(J.a,{item:!0,container:!0,xs:12,children:[Object(a.jsx)(J.a,{item:!0,xs:6,style:{textAlign:"center"},children:Object(a.jsx)(V.a,{variant:"contained",color:"secondary",onClick:function(){A.debug.creatures={},A.debug.regions={},r(u.get(T(),["debug","creatures"])),h(u.get(T(),["debug","regions"])),v(H(0).powerLevel.minus(p.encounters.lesserLevelScale).lt(Object(j.Decimal)(1))?Object(j.Decimal)(1):H(0).powerLevel.minus(p.encounters.lesserLevelScale)),k(H(0).powerLevel.plus(p.encounters.greaterLevelScale).gt(100)?Object(j.Decimal)(100):H(0).powerLevel.plus(2*p.encounters.greaterLevelScale))},children:"Reset Debug Settings"})}),Object(a.jsx)(J.a,{item:!0,xs:6,style:{textAlign:"center"},children:Object(a.jsx)(V.a,{variant:"contained",color:"secondary",onClick:function(){window.localStorage.removeItem(L),alert("local storage cleared")},children:"Clear Save"})})]}),Object(a.jsxs)(J.a,{item:!0,xs:12,children:[Object(a.jsx)(J.a,{item:!0,xs:3,children:Object(a.jsx)(We.a,{type:"number",value:P,onChange:function(e){var t=Number.parseInt(e.target.value);u.set(T(),["debug","manualSpeedMultiplier"],t),S(t)},label:"Manual speed multiplier"})}),Object(a.jsx)(J.a,{item:!0,xs:3,children:Object(a.jsx)(We.a,{type:"number",min:"0",value:M,onChange:function(e){e.target.value=""===e.target.value?0:e.target.value;var t=Object(j.Decimal)(Number.parseInt(e.target.value));t.lt(0)?(H(0).absorbedPower=Object(j.Decimal)(0),F(Object(j.Decimal)(0))):(H(0).absorbedPower=t,F(t))},label:"Current player absorbed power"})})]}),Object(a.jsx)(J.a,{item:!0,xs:12,children:Object(a.jsx)("h3",{children:"Creatures"})}),Object(a.jsx)(J.a,{container:!0,item:!0,xs:12,children:Object.keys(b).map((function(e){var t=!1!==c[e]&&!1!==u.get(c,[e,"enabled"]);return Object(a.jsx)(J.a,{item:!0,xs:3,style:{height:"100%"},children:Object(a.jsxs)(V.a,{variant:"contained",color:t?"default":"secondary",style:{width:"100%",height:"100%"},onClick:function(){u.set(T(),["debug","creatures",e,"enabled"],!t),r(Object(m.a)(Object(m.a)({},c),{},Object(z.a)({},e,{enabled:!t})))},children:[Object(a.jsx)("img",{src:"./monsters/".concat(b[e].texture)}),b[e].name]})})}))}),Object(a.jsx)(J.a,{item:!0,style:{textAlign:"center"},children:Object(a.jsx)("h4",{children:"Regions"})}),Object(a.jsx)(J.a,{container:!0,item:!0,xs:12,children:Object.keys($).map((function(e){return Object(a.jsxs)(J.a,{item:!0,xs:6,style:{textAlign:"center"},children:[Object(a.jsx)("h4",{children:$[e].name}),Object(a.jsx)(J.a,{item:!0,container:!0,xs:12,children:Object.keys($[e].encounters).map((function(t){var n=!1!==u.get(d,[e,"encounters",t,"enabled"]);return Object(a.jsx)(J.a,{item:!0,xs:3,children:Object(a.jsx)(V.a,{variant:"contained",color:n?"default":"secondary",style:{width:"100%",height:"100%"},onClick:function(){u.set(T(),["debug","regions",e,"encounters",t,"enabled"],!n),h(Object(m.a)(Object(m.a)({},d),{},Object(z.a)({},e,u.set(d[e],["encounters",t,"enabled"],!n))))},children:$[e].encounters[t].description})})}))})]})}))}),Object(a.jsxs)(J.a,{container:!0,children:[Object(a.jsx)(J.a,{item:!0,xs:12,style:{textAlign:"center"},children:Object(a.jsx)("h4",{children:"Encounter rules"})}),Object(a.jsxs)(J.a,{container:!0,item:!0,xs:3,children:[Object(a.jsx)(J.a,{item:!0,children:Object(a.jsx)(V.a,{onClick:function(){v(x.plus(1)),u.set(T(),["debug","encounters","minLevel"],x.plus(1)),x.plus(1).gt(w)&&(k(x.plus(1)),u.set(T(),["debug","encounters","maxLevel"],x.plus(1)))},children:Object(a.jsx)(Ye.a,{})})}),Object(a.jsxs)(J.a,{item:!0,children:["Minimum level ",x.toFixed()]}),Object(a.jsx)(J.a,{item:!0,children:Object(a.jsx)(V.a,{onClick:function(){u.set(T(),["debug","encounters","minLevel"],x.minus(1)),v(x.minus(1))},children:Object(a.jsx)($e.a,{})})})]}),Object(a.jsxs)(J.a,{container:!0,item:!0,xs:3,children:[Object(a.jsx)(J.a,{item:!0,children:Object(a.jsx)(V.a,{onClick:function(){k(w.plus(1)),u.set(T(),["debug","encounters","maxLevel"],w.plus(1))},children:Object(a.jsx)(Ye.a,{})})}),Object(a.jsxs)(J.a,{item:!0,children:["Maximum level ",w.toFixed()]}),Object(a.jsx)(J.a,{item:!0,children:Object(a.jsx)(V.a,{onClick:function(){u.set(T(),["debug","encounters","maxLevel"],w.minus(1)),k(w.minus(1)),w.minus(1).lt(x)&&(v(w.minus(1)),u.set(T(),["debug","encounters","minLevel"],w.minus(1)))},children:Object(a.jsx)($e.a,{})})})]})]})]})})}var Ue=n(70),ze=n(123);function Je(e){Object(i.useEffect)((function(){T().paused=!0}));var t=Object(U.d)();return Object(a.jsxs)(re.a,{children:[Object(a.jsxs)(J.a,{container:!0,children:[Object(a.jsxs)(J.a,{item:!0,xs:12,style:{textAlign:"center"},children:["Conquest of Hell Ver. ",Ue.version," Save Compatibility NOT Guaranteed"]}),Object(a.jsx)(J.a,{item:!0,xs:12,style:{textAlign:"center"},children:Object(a.jsx)(V.a,{onClick:function(){null===T().currentAction?t.push("/reincarnating"):(T().paused=!1,t.push("/adventuring"))},variant:"contained",color:"primary",children:"Start"})}),Object(a.jsx)(J.a,{item:!0,container:!0,children:Object(a.jsxs)(J.a,{item:!0,container:!0,xs:12,children:[Object(a.jsx)(J.a,{item:!0,xs:12,children:Ue.version}),Object(a.jsx)("ul",{children:ze[Ue.version].changes.map((function(e){return Object(a.jsx)("li",{children:e},e)}))})]})})]}),Object(a.jsx)(J.a,{item:!0,xs:!0,style:{textAlign:"center"},children:Object(a.jsx)(te.a,{title:"Delete your previous data and start the game",children:Object(a.jsx)(V.a,{onClick:function(){confirm("This will wipe all your previous progress.")&&((S[P.version].compatiblePreviousVersions||[]).forEach((function(e){return window.localStorage.removeItem(n(112)("hell-conquest-".concat(e)))})),window.localStorage.removeItem(n(112)("hell-conquest-".concat(P.version))),A=M(),null===T().currentAction?t.push("/reincarnating"):(T().paused=!1,t.push("/adventuring")))},variant:"contained",color:"secondary",children:"Hard Reset and Start"})})})]})}M();var Ve=K();var Xe=function(){var e=Object(i.useState)(!1),t=Object(o.a)(e,2),n=t[0],c=t[1];return Object(Te.a)("`",(function(){c((function(e){return!!p.debug&&(e||(T().paused=!0),C(),!e)}))})),Object(a.jsxs)(U.a,{initialEntries:["reincarnating"===T().currentAction?"/reincarnating":"adventuring"===T().currentAction?"/adventuring":"/"],basename:"%PUBLIC_URL%",children:[Object(a.jsxs)(U.c,{children:[Object(a.jsx)(U.b,{path:"/",exact:!0,children:Object(a.jsx)(Je,{})}),Object(a.jsx)(U.b,{path:"/reincarnating",exact:!0,children:Object(a.jsx)(ie,{reincarnate:function(e,t){q(e,t),T().automaticReincarnate=!1,A.paused=!1}})}),Object(a.jsx)(U.b,{path:"/adventuring",exact:!0,children:Object(a.jsx)(Ne,{rng:Ve})})]}),n&&Object(a.jsx)(Ke,{})]})},Ze=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,748)).then((function(t){var n=t.getCLS,a=t.getFID,i=t.getFCP,c=t.getLCP,r=t.getTTFB;n(e),a(e),i(e),c(e),r(e)}))};s.a.render(Object(a.jsx)(c.a.StrictMode,{children:Object(a.jsx)(Xe,{})}),document.getElementById("root")),Ze()}},[[708,1,2]]]);
//# sourceMappingURL=main.c572627b.chunk.js.map